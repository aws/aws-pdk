###TSAPI_SPLIT_FILE###
###TSAPI_WRITE_FILE###
{
  "dir": ".",
  "name": "functions",
  "ext": ".ts",
  "overwrite": true,
  "kebabCaseFileName": true
}
###/TSAPI_WRITE_FILE###import { Construct } from "constructs";
import { Duration } from "aws-cdk-lib";
import { SnapStartFunction, SnapStartFunctionProps } from "@aws/pdk/type-safe-api";
import { Code, Function, Runtime, Tracing, FunctionProps } from "aws-cdk-lib/aws-lambda";
import * as path from "path";
{{#apiInfo ~}}
{{#apis ~}}
{{#if vendorExtensions.x-connect-handler}}
/**
 * Options for the $ConnectFunction construct
 */
export interface $ConnectFunctionProps extends Omit<{{#startsWith vendorExtensions.x-connect-handler.language 'java' ~}}SnapStart{{~/startsWith}}FunctionProps, 'code' | 'handler' | 'runtime'> {}

/**
 * Lambda function construct which points to the {{vendorExtensions.x-connect-handler.language}} implementation for the websocket connect event
 */
export class $ConnectFunction extends {{#startsWith vendorExtensions.x-connect-handler.language 'java' ~}}SnapStart{{~/startsWith}}Function {
  constructor(scope: Construct, id: string, props?: $ConnectFunctionProps) {
    super(scope, id, {
      {{#startsWith vendorExtensions.x-connect-handler.language 'typescript' ~}}
      runtime: Runtime.{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-node-lambda-runtime-version}}{{/apis.0}}{{/apiInfo}},
      {{~/startsWith}}{{#startsWith vendorExtensions.x-connect-handler.language 'python' ~}}
      runtime: Runtime.{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-python-lambda-runtime-version}}{{/apis.0}}{{/apiInfo}},
      {{~/startsWith}}{{#startsWith vendorExtensions.x-connect-handler.language 'java' ~}}
      runtime: Runtime.{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-java-lambda-runtime-version}}{{/apis.0}}{{/apiInfo}},
      {{~/startsWith}}
      {{#startsWith vendorExtensions.x-connect-handler.language 'typescript' ~}}
      handler: "index.handler",
      {{~/startsWith}}{{#startsWith vendorExtensions.x-connect-handler.language 'python' ~}}
      handler: "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-python-module}}{{/apis.0}}{{/apiInfo}}.__connect.handler",
      {{~/startsWith}}{{#startsWith vendorExtensions.x-connect-handler.language 'java' ~}}
      handler: "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-java-package}}{{/apis.0}}{{/apiInfo}}.$ConnectHandler",
      {{~/startsWith}}
      code: Code.fromAsset(path.resolve(__dirname, "..",
        {{#startsWith vendorExtensions.x-connect-handler.language 'typescript' ~}}
        "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-typescript-asset-path}}{{/apis.0}}{{/apiInfo}}",
        "$connect",
        {{~/startsWith}}{{#startsWith vendorExtensions.x-connect-handler.language 'python' ~}}
        "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-python-asset-path}}{{/apis.0}}{{/apiInfo}}",
        {{~/startsWith}}{{#startsWith vendorExtensions.x-connect-handler.language 'java' ~}}
        "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-java-asset-path}}{{/apis.0}}{{/apiInfo}}",
        {{~/startsWith}}
      )),
      tracing: Tracing.ACTIVE,
      timeout: Duration.seconds(30),
      ...props,
    });
  }
}
{{~/if}}
{{#if vendorExtensions.x-disconnect-handler}}
/**
 * Options for the $DisconnectFunction construct
 */
export interface $DisconnectFunctionProps extends Omit<{{#startsWith vendorExtensions.x-disconnect-handler.language 'java' ~}}SnapStart{{~/startsWith}}FunctionProps, 'code' | 'handler' | 'runtime'> {}

/**
 * Lambda function construct which points to the {{vendorExtensions.x-disconnect-handler.language}} implementation for the websocket disconnect event
 */
export class $DisconnectFunction extends {{#startsWith vendorExtensions.x-disconnect-handler.language 'java' ~}}SnapStart{{~/startsWith}}Function {
  constructor(scope: Construct, id: string, props?: $DisconnectFunctionProps) {
    super(scope, id, {
      {{#startsWith vendorExtensions.x-disconnect-handler.language 'typescript' ~}}
      runtime: Runtime.{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-node-lambda-runtime-version}}{{/apis.0}}{{/apiInfo}},
      {{~/startsWith}}{{#startsWith vendorExtensions.x-disconnect-handler.language 'python' ~}}
      runtime: Runtime.{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-python-lambda-runtime-version}}{{/apis.0}}{{/apiInfo}},
      {{~/startsWith}}{{#startsWith vendorExtensions.x-disconnect-handler.language 'java' ~}}
      runtime: Runtime.{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-java-lambda-runtime-version}}{{/apis.0}}{{/apiInfo}},
      {{~/startsWith}}
      {{#startsWith vendorExtensions.x-disconnect-handler.language 'typescript' ~}}
      handler: "index.handler",
      {{~/startsWith}}{{#startsWith vendorExtensions.x-disconnect-handler.language 'python' ~}}
      handler: "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-python-module}}{{/apis.0}}{{/apiInfo}}.__disconnect.handler",
      {{~/startsWith}}{{#startsWith vendorExtensions.x-disconnect-handler.language 'java' ~}}
      handler: "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-java-package}}{{/apis.0}}{{/apiInfo}}.$DisconnectHandler",
      {{~/startsWith}}
      code: Code.fromAsset(path.resolve(__dirname, "..",
        {{#startsWith vendorExtensions.x-disconnect-handler.language 'typescript' ~}}
        "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-typescript-asset-path}}{{/apis.0}}{{/apiInfo}}",
        "$disconnect",
        {{~/startsWith}}{{#startsWith vendorExtensions.x-disconnect-handler.language 'python' ~}}
        "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-python-asset-path}}{{/apis.0}}{{/apiInfo}}",
        {{~/startsWith}}{{#startsWith vendorExtensions.x-disconnect-handler.language 'java' ~}}
        "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-java-asset-path}}{{/apis.0}}{{/apiInfo}}",
        {{~/startsWith}}
      )),
      tracing: Tracing.ACTIVE,
      timeout: Duration.seconds(30),
      ...props,
    });
  }
}
{{~/if}}
{{#operations ~}}
{{#operation ~}}
{{#if vendorExtensions.x-handler}}

/**
 * Options for the {{operationIdCamelCase}}Function construct
 */
export interface {{operationIdCamelCase}}FunctionProps extends Omit<{{#startsWith vendorExtensions.x-handler.language 'java' ~}}SnapStart{{~/startsWith}}FunctionProps, 'code' | 'handler' | 'runtime'> {}

/**
 * Lambda function construct which points to the {{vendorExtensions.x-handler.language}} implementation of {{operationIdCamelCase}}
 */
export class {{operationIdCamelCase}}Function extends {{#startsWith vendorExtensions.x-handler.language 'java' ~}}SnapStart{{~/startsWith}}Function {
  constructor(scope: Construct, id: string, props?: {{operationIdCamelCase}}FunctionProps) {
    super(scope, id, {
      {{#startsWith vendorExtensions.x-handler.language 'typescript' ~}}
      runtime: Runtime.{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-node-lambda-runtime-version}}{{/apis.0}}{{/apiInfo}},
      {{~/startsWith}}{{#startsWith vendorExtensions.x-handler.language 'python' ~}}
      runtime: Runtime.{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-python-lambda-runtime-version}}{{/apis.0}}{{/apiInfo}},
      {{~/startsWith}}{{#startsWith vendorExtensions.x-handler.language 'java' ~}}
      runtime: Runtime.{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-java-lambda-runtime-version}}{{/apis.0}}{{/apiInfo}},
      {{~/startsWith}}
      {{#startsWith vendorExtensions.x-handler.language 'typescript' ~}}
      handler: "index.handler",
      {{~/startsWith}}{{#startsWith vendorExtensions.x-handler.language 'python' ~}}
      handler: "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-python-module}}{{/apis.0}}{{/apiInfo}}.{{operationIdSnakeCase}}.handler",
      {{~/startsWith}}{{#startsWith vendorExtensions.x-handler.language 'java' ~}}
      handler: "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-java-package}}{{/apis.0}}{{/apiInfo}}.{{operationIdCamelCase}}Handler",
      {{~/startsWith}}
      code: Code.fromAsset(path.resolve(__dirname, "..",
        {{#startsWith vendorExtensions.x-handler.language 'typescript' ~}}
        "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-typescript-asset-path}}{{/apis.0}}{{/apiInfo}}",
        "###TSAPI_FN###{ "function": "kebabCase", "args": ["{{nickname}}"] }###/TSAPI_FN###",
        {{~/startsWith}}{{#startsWith vendorExtensions.x-handler.language 'python' ~}}
        "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-python-asset-path}}{{/apis.0}}{{/apiInfo}}",
        {{~/startsWith}}{{#startsWith vendorExtensions.x-handler.language 'java' ~}}
        "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-handlers-java-asset-path}}{{/apis.0}}{{/apiInfo}}",
        {{~/startsWith}}
      )),
      tracing: Tracing.ACTIVE,
      timeout: Duration.seconds(30),
      ...props,
    });
  }
}

{{~/if}}
{{~/operation}}
{{~/operations}}
{{~/apis}}
{{~/apiInfo}}