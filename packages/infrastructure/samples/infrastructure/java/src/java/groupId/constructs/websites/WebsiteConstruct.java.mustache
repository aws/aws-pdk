package {{{groupId}}}.constructs.websites;

import java.util.Map;
import java.util.TreeMap;

import software.amazon.awscdk.Stack;
import io.github.cdklabs.cdknag.NagSuppressions;
import io.github.cdklabs.cdknag.NagPackSuppression;
import software.aws.pdk.identity.UserIdentity;
import software.aws.pdk.static_website.RuntimeOptions;
import software.aws.pdk.static_website.StaticWebsite;
import software.aws.pdk.static_website.StaticWebsiteProps;
import software.constructs.Construct;
{{#typeSafeApis}}
import {{{groupId}}}.constructs.apis.{{{apiName}}};
{{/typeSafeApis}}

/**
 * Construct to deploy a Static Website
 */
public class {{{websiteName}}} extends Construct {

    public {{{websiteName}}}(Construct scope, String id, UserIdentity userIdentity{{#typeSafeApis}}, {{{apiName}}} {{{apiNameLowercase}}}{{/typeSafeApis}}) {
        super(scope, id);

        StaticWebsite website = new StaticWebsite(this, id, StaticWebsiteProps.builder()
                .websiteContentPath("{{{websiteDistRelativePath}}}")
                .runtimeOptions(RuntimeOptions.builder()
                        .jsonPayload(new TreeMap<>(Map.of(
                                "region", Stack.of(this).getRegion(),
                                "identityPoolId", userIdentity.getIdentityPool().getIdentityPoolId(),
                                "userPoolId", userIdentity.getUserPool().getUserPoolId(),
                                "userPoolWebClientId", userIdentity.getUserPoolClient().getUserPoolClientId(),
                                "typeSafeApis", Map.of(
                                    {{#typeSafeApis}}
                                    "{{{apiName}}}", {{{apiNameLowercase}}}.api.getApi().urlForPath(){{^isLast}},{{/isLast}}
                                    {{/typeSafeApis}}
                                )
                                )))
                        .build())
                .build());
        
        NagSuppressions.addResourceSuppressions(website, Arrays.asList(NagPackSuppression.builder()
            .id("AwsPrototyping-CloudFrontDistributionGeoRestrictions")
            .reason("Suppressed to allow unrestricted access. Not recommended in production.")
            .build()), true);
    }
}
