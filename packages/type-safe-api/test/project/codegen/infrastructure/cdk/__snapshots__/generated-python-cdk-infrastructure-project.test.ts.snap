// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generated Python Infra Code Unit Tests Synth 1`] = `
{
  ".gitattributes": "# ~~ Generated by projen. To modify, edit .projenrc.py and run "npx projen".

/.gitattributes linguist-generated
/.github/workflows/pull-request-lint.yml linguist-generated
/.gitignore linguist-generated
/.projen/** linguist-generated
/.projen/deps.json linguist-generated
/.projen/files.json linguist-generated
/.projen/tasks.json linguist-generated
/pyproject.toml linguist-generated",
  ".github/workflows/pull-request-lint.yml": "# ~~ Generated by projen. To modify, edit .projenrc.py and run "npx projen".

name: pull-request-lint
on:
  pull_request_target:
    types:
      - labeled
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - edited
jobs:
  validate:
    name: Validate PR title
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: amannn/action-semantic-pull-request@v5.0.2
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        with:
          types: |-
            feat
            fix
            chore
          requireScope: false
",
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.py and run "npx projen".
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
!/.github/workflows/pull-request-lint.yml
!/pyproject.toml
/poetry.toml
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
*.manifest
*.spec
pip-log.txt
pip-delete-this-directory.txt
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/
*.mo
*.pot
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
instance/
.webassets-cache
.scrapy
docs/_build/
.pybuilder/
target/
.ipynb_checkpoints
profile_default/
ipython_config.py
__pypackages__/
celerybeat-schedule
celerybeat.pid
*.sage.py
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.spyderproject
.spyproject
.ropeproject
/site
.mypy_cache/
.dmypy.json
dmypy.json
.pyre/
.pytype/
cython_debug/
test_infra
",
  ".projen/deps.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.py and run "npx projen".",
    "dependencies": [
      {
        "name": "projen",
        "type": "devenv",
        "version": "99.99.99",
      },
      {
        "name": "aws_prototyping_sdk.type_safe_api",
        "type": "runtime",
        "version": "^0.0.0",
      },
      {
        "name": "aws-cdk-lib",
        "type": "runtime",
        "version": "^2.0.0",
      },
      {
        "name": "cdk-nag",
        "type": "runtime",
        "version": "^2.0.0",
      },
      {
        "name": "constructs",
        "type": "runtime",
        "version": "^10.0.0",
      },
      {
        "name": "test-python-client",
        "type": "runtime",
        "version": "{path="../python-client", develop=true}",
      },
    ],
  },
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.py and run "npx projen".",
    "files": [
      ".gitattributes",
      ".github/workflows/pull-request-lint.yml",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
      "poetry.toml",
      "pyproject.toml",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.py and run "npx projen".",
    "env": {
      "PATH": "$(echo $(poetry env info -p)/bin:$PATH)",
      "VIRTUAL_ENV": "$(poetry env info -p)",
    },
    "tasks": {
      "build": {
        "description": "Full release build",
        "name": "build",
        "steps": [
          {
            "spawn": "default",
          },
          {
            "spawn": "pre-compile",
          },
          {
            "spawn": "compile",
          },
          {
            "spawn": "post-compile",
          },
          {
            "spawn": "test",
          },
          {
            "spawn": "package",
          },
        ],
      },
      "clobber": {
        "condition": "git diff --exit-code > /dev/null",
        "description": "hard resets to HEAD of origin and cleans the local repo",
        "env": {
          "BRANCH": "$(git branch --show-current)",
        },
        "name": "clobber",
        "steps": [
          {
            "exec": "git checkout -b scratch",
            "name": "save current HEAD in "scratch" branch",
          },
          {
            "exec": "git checkout $BRANCH",
          },
          {
            "exec": "git fetch origin",
            "name": "fetch latest changes from origin",
          },
          {
            "exec": "git reset --hard origin/$BRANCH",
            "name": "hard reset to origin commit",
          },
          {
            "exec": "git clean -fdx",
            "name": "clean all untracked files",
          },
          {
            "say": "ready to rock! (unpushed commits are under the "scratch" branch)",
          },
        ],
      },
      "compile": {
        "description": "Only compile",
        "name": "compile",
      },
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "python .projenrc.py",
          },
        ],
      },
      "eject": {
        "description": "Remove projen from the project",
        "env": {
          "PROJEN_EJECTING": "true",
        },
        "name": "eject",
        "steps": [
          {
            "spawn": "default",
          },
        ],
      },
      "generate": {
        "name": "generate",
        "steps": [
          {
            "cwd": "../../../../../../scripts/custom/infrastructure/cdk",
            "exec": "./generate-type-safe-cdk-construct --spec-path ../../../../test/project/codegen/infrastructure/cdk/python-infra/my-spec.json --source-path ../../../../test/project/codegen/infrastructure/cdk/python-infra/test_infra --language python --infra-package test_infra --generated-types-package test_client",
          },
        ],
      },
      "install": {
        "description": "Install and upgrade dependencies",
        "name": "install",
        "steps": [
          {
            "exec": "poetry update",
          },
        ],
      },
      "package": {
        "description": "Creates the distribution package",
        "name": "package",
        "steps": [
          {
            "exec": "poetry build",
          },
        ],
      },
      "post-compile": {
        "description": "Runs after successful compilation",
        "name": "post-compile",
      },
      "pre-compile": {
        "description": "Prepare the project for compilation",
        "name": "pre-compile",
        "steps": [
          {
            "spawn": "generate",
          },
        ],
      },
      "publish": {
        "description": "Uploads the package to PyPI.",
        "name": "publish",
        "steps": [
          {
            "exec": "poetry publish",
          },
        ],
      },
      "publish:test": {
        "description": "Uploads the package against a test PyPI endpoint.",
        "name": "publish:test",
        "steps": [
          {
            "exec": "poetry publish -r testpypi",
          },
        ],
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "README.md": "# replace this",
  "poetry.toml": "# ~~ Generated by projen. To modify, edit .projenrc.py and run "npx projen".

[repositories.testpypi]
url = "https://test.pypi.org/legacy/"
",
  "pyproject.toml": "# ~~ Generated by projen. To modify, edit .projenrc.py and run "npx projen".

[build-system]
requires = [ "poetry_core>=1.0.0" ]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "test-python-infra"
version = "1.0.0"
description = ""
authors = [ "test <me@example.com>" ]
readme = "README.md"
include = [ "test_infra", "test_infra/**/*.py" ]

  [[tool.poetry.packages]]
  include = "test_infra"

  [tool.poetry.dependencies]
  "aws_prototyping_sdk.type_safe_api" = "^0.0.0"
  aws-cdk-lib = "^2.0.0"
  cdk-nag = "^2.0.0"
  constructs = "^10.0.0"
  python = "^3.7"

    [tool.poetry.dependencies.test-python-client]
    path = "../python-client"
    develop = true

  [tool.poetry.dev-dependencies]
  projen = "99.99.99"
",
}
`;
