openapi: 3.0.3
info:
  version: 1.0.0
  title: Example API
paths:
  /path/{pathParam}:
    post:
      operationId: operationOne
      parameters:
        - in: query
          name: param1
          description: This is parameter 1
          schema:
            type: string
          required: true
        - in: query
          name: param2
          description: This is parameter 2
          schema:
            type: array
            items:
              type: string
          required: true
        - in: query
          name: param3
          schema:
            type: number
          required: true
        - in: query
          name: param4
          schema:
            type: string
          required: false
        - in: path
          name: pathParam
          schema:
            type: string
          required: true
        - in: header
          name: x-header-param
          description: This is a header parameter
          schema:
            type: string
          required: true
        - in: header
          name: x-multi-value-header-param
          schema:
            type: array
            items:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRequest'
      responses:
        '200':
          description: Successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestResponse'
        '400':
          description: Error response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /without-operation-id:
    delete:
      responses:
        '200':
          description: Successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestResponse'
  /empty-response:
    put:
      operationId: empty
      responses:
        204:
          description: No response body!
  /map-response:
    get:
      operationId: mapResponse
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MapResponse"
  /any-request-response:
    put:
      operationId: anyRequestResponse
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        200:
          description: Any response
          content:
            'application/json':
              schema: {}
  /different-media-type:
    post:
      operationId: mediaTypes
      requestBody:
        required: true
        content:
          application/pdf:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Success
          content:
            application/x-mpegurl:
              schema:
                type: string
  /multiple-content-types:
    post:
      operationId: multipleContentTypes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRequest'
          application/pdf:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    ApiError:
      type: object
      properties:
        errorMessage:
          type: string
      required:
        - errorMessage
    TestRequest:
      description: This is a test request
      type: object
      properties:
        myInput:
          type: number
    TestResponse:
      description: This is a test response
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            properties:
              message:
                description: This is a message
                type: string
              id:
                type: integer
            required:
              - id
      required:
        - messages
    MapResponse:
      type: object
      properties:
        mapProperty:
          type: object
          additionalProperties:
            type: object
            properties:
              a:
                type: string
              b:
                type: string
            required:
              - a
      required:
        - mapProperty