{{#apiInfo}}
{{#apis.0}}
package {{package}};
{{/apis.0}}
{{/apiInfo}}

{{#apiInfo}}
{{#apis.0}}
import {{modelPackage}}.*;
{{/apis.0}}
{{/apiInfo}}

{{#apiInfo}}
{{#apis}}
{{#imports}}import {{import}};
{{/imports}}
{{/apis}}
{{/apiInfo}}

import java.util.HashMap;
import java.util.Map;
import java.util.List;
import java.util.Arrays;


// Look up path and http method for a given operation name
{{>generatedAnnotation}}
public class OperationLookup {
    @lombok.Builder @lombok.Getter
    public static class OperationLookupEntry {
        private String method;
        private String path;
        private List<String> contentTypes;
    }

    /**
     * Returns the operation lookup information for the TypeSafeRestApi construct
     */
    public static Map<String, OperationLookupEntry> getOperationLookup() {
        final Map<String, OperationLookupEntry> config = new HashMap<>();

        {{#apiInfo}}
        {{#apis}}
        {{#operations}}
        {{#operation}}
        config.put("{{nickname}}", OperationLookupEntry.builder()
            .path("{{path}}")
            .method("{{httpMethod}}")
            .contentTypes(Arrays.asList({{^consumes}}"application/json"{{/consumes}}{{#consumes}}{{#mediaType}}"{{{.}}}"{{^-last}},{{/-last}}{{/mediaType}}{{/consumes}}))
            .build());
        {{/operation}}
        {{/operations}}
        {{/apis}}
        {{/apiInfo}}

        return config;
    }
}
