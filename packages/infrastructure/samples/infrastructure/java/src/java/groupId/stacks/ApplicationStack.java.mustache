package {{{groupId}}}.stacks;

import software.amazon.awscdk.Stack;
import software.amazon.awscdk.StackProps;
{{#typeSafeApis}}
import {{{groupId}}}.constructs.apis.{{{apiName}}};
{{/typeSafeApis}}
{{#cloudscapeReactTsWebsites}}
import {{{groupId}}}.constructs.websites.{{{websiteName}}};
{{/cloudscapeReactTsWebsites}}
import software.aws.pdk.identity.UserIdentity;
{{#allowSignup}}import software.aws.pdk.identity.UserIdentityProps;
{{/allowSignup}}import software.constructs.Construct;

public class ApplicationStack extends Stack {
    public ApplicationStack(Construct scope, String id) {
        this(scope, id, null);
    }

    public ApplicationStack(Construct scope, String id, StackProps props) {
        super(scope, id, props);

        UserIdentity userIdentity = new UserIdentity(this, String.format("%sUserIdentity", id){{#allowSignup}},
          UserIdentityProps.builder()
            .allowSignup(true)
            .build(){{/allowSignup}});
        {{#typeSafeApis}}
        {{#cloudscapeReactTsWebsites.0}}{{{apiName}}} {{{apiNameLowercase}}} = {{/cloudscapeReactTsWebsites.0}}new {{{apiName}}}(this, "{{{apiName}}}", userIdentity);
        {{/typeSafeApis}}
        {{#cloudscapeReactTsWebsites}}
        new {{{websiteName}}}(this, "{{{websiteName}}}", userIdentity{{#typeSafeApis}}, {{{apiNameLowercase}}}{{/typeSafeApis}});
        {{/cloudscapeReactTsWebsites}}
    }
}
