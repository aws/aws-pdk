// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parsed Spec Unit Tests Multi 1`] = `
Object {
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
",
  ".projen/files.json": Object {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
    "files": Array [
      ".gitattributes",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
    ],
  },
  ".projen/tasks.json": Object {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
    "tasks": Object {
      "build": Object {
        "description": "Full release build",
        "name": "build",
        "steps": Array [
          Object {
            "spawn": "default",
          },
          Object {
            "spawn": "pre-compile",
          },
          Object {
            "spawn": "compile",
          },
          Object {
            "spawn": "post-compile",
          },
          Object {
            "spawn": "test",
          },
          Object {
            "spawn": "package",
          },
        ],
      },
      "compile": Object {
        "description": "Only compile",
        "name": "compile",
      },
      "default": Object {
        "description": "Synthesize project files",
        "name": "default",
      },
      "eject": Object {
        "description": "Remove projen from the project",
        "env": Object {
          "PROJEN_EJECTING": "true",
        },
        "name": "eject",
        "steps": Array [
          Object {
            "spawn": "default",
          },
        ],
      },
      "package": Object {
        "description": "Creates the distribution package",
        "name": "package",
      },
      "post-compile": Object {
        "description": "Runs after successful compilation",
        "name": "post-compile",
      },
      "pre-compile": Object {
        "description": "Prepare the project for compilation",
        "name": "pre-compile",
      },
      "test": Object {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "spec.json": Object {
    "components": Object {
      "schemas": Object {
        "ApiError": Object {
          "properties": Object {
            "errorMessage": Object {
              "type": "string",
            },
          },
          "required": Array [
            "errorMessage",
          ],
          "type": "object",
        },
        "TestRequest": Object {
          "properties": Object {
            "myInput": Object {
              "type": "number",
            },
          },
          "type": "object",
        },
        "TestResponse": Object {
          "properties": Object {
            "messages": Object {
              "items": Object {
                "properties": Object {
                  "id": Object {
                    "type": "integer",
                  },
                  "message": Object {
                    "type": "string",
                  },
                },
                "required": Array [
                  "id",
                ],
                "type": "object",
              },
              "type": "array",
            },
          },
          "required": Array [
            "messages",
          ],
          "type": "object",
        },
      },
    },
    "info": Object {
      "title": "Example API",
      "version": "1.0.0",
    },
    "openapi": "3.0.3",
    "paths": Object {
      "/operation/{pathParam}": Object {
        "post": Object {
          "operationId": "someTestOperation",
          "parameters": Array [
            Object {
              "in": "path",
              "name": "pathParam",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
          ],
          "requestBody": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/TestRequest",
                },
              },
            },
            "required": true,
          },
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "$ref": "#/components/schemas/TestResponse",
                  },
                },
              },
              "description": "Successful response",
            },
            "400": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "$ref": "#/components/schemas/ApiError",
                  },
                },
              },
              "description": "Error response",
            },
          },
        },
      },
    },
  },
}
`;

exports[`Parsed Spec Unit Tests Single 1`] = `
Object {
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
",
  ".projen/files.json": Object {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
    "files": Array [
      ".gitattributes",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
    ],
  },
  ".projen/tasks.json": Object {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
    "tasks": Object {
      "build": Object {
        "description": "Full release build",
        "name": "build",
        "steps": Array [
          Object {
            "spawn": "default",
          },
          Object {
            "spawn": "pre-compile",
          },
          Object {
            "spawn": "compile",
          },
          Object {
            "spawn": "post-compile",
          },
          Object {
            "spawn": "test",
          },
          Object {
            "spawn": "package",
          },
        ],
      },
      "compile": Object {
        "description": "Only compile",
        "name": "compile",
      },
      "default": Object {
        "description": "Synthesize project files",
        "name": "default",
      },
      "eject": Object {
        "description": "Remove projen from the project",
        "env": Object {
          "PROJEN_EJECTING": "true",
        },
        "name": "eject",
        "steps": Array [
          Object {
            "spawn": "default",
          },
        ],
      },
      "package": Object {
        "description": "Creates the distribution package",
        "name": "package",
      },
      "post-compile": Object {
        "description": "Runs after successful compilation",
        "name": "post-compile",
      },
      "pre-compile": Object {
        "description": "Prepare the project for compilation",
        "name": "pre-compile",
      },
      "test": Object {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "spec.json": Object {
    "components": Object {
      "schemas": Object {
        "ApiError": Object {
          "properties": Object {
            "errorMessage": Object {
              "type": "string",
            },
          },
          "required": Array [
            "errorMessage",
          ],
          "type": "object",
        },
        "TestRequest": Object {
          "properties": Object {
            "myInput": Object {
              "type": "number",
            },
          },
          "type": "object",
        },
        "TestResponse": Object {
          "properties": Object {
            "messages": Object {
              "items": Object {
                "properties": Object {
                  "id": Object {
                    "type": "integer",
                  },
                  "message": Object {
                    "type": "string",
                  },
                },
                "required": Array [
                  "id",
                ],
                "type": "object",
              },
              "type": "array",
            },
          },
          "required": Array [
            "messages",
          ],
          "type": "object",
        },
      },
    },
    "info": Object {
      "title": "Example API",
      "version": "1.0.0",
    },
    "openapi": "3.0.3",
    "paths": Object {
      "/any-request-response": Object {
        "put": Object {
          "operationId": "anyRequestResponse",
          "requestBody": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {},
              },
            },
          },
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {},
                },
              },
              "description": "Any response",
            },
          },
        },
      },
      "/different-media-type": Object {
        "post": Object {
          "operationId": "mediaTypes",
          "requestBody": Object {
            "content": Object {
              "application/pdf": Object {
                "schema": Object {
                  "format": "binary",
                  "type": "string",
                },
              },
            },
            "required": true,
          },
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/x-mpegurl": Object {
                  "schema": Object {
                    "type": "string",
                  },
                },
              },
              "description": "Success",
            },
          },
        },
      },
      "/empty-response": Object {
        "put": Object {
          "operationId": "empty",
          "responses": Object {
            "204": Object {
              "description": "No response body!",
            },
          },
        },
      },
      "/path/{pathParam}": Object {
        "post": Object {
          "operationId": "operationOne",
          "parameters": Array [
            Object {
              "in": "query",
              "name": "param1",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
            Object {
              "in": "query",
              "name": "param2",
              "required": true,
              "schema": Object {
                "items": Object {
                  "type": "string",
                },
                "type": "array",
              },
            },
            Object {
              "in": "query",
              "name": "param3",
              "required": true,
              "schema": Object {
                "type": "number",
              },
            },
            Object {
              "in": "query",
              "name": "param4",
              "required": false,
              "schema": Object {
                "type": "string",
              },
            },
            Object {
              "in": "path",
              "name": "pathParam",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
          ],
          "requestBody": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/TestRequest",
                },
              },
            },
            "required": true,
          },
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "$ref": "#/components/schemas/TestResponse",
                  },
                },
              },
              "description": "Successful response",
            },
            "400": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "$ref": "#/components/schemas/ApiError",
                  },
                },
              },
              "description": "Error response",
            },
          },
        },
      },
      "/without-operation-id": Object {
        "delete": Object {
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "$ref": "#/components/schemas/TestResponse",
                  },
                },
              },
              "description": "Successful response",
            },
          },
        },
      },
    },
  },
}
`;
