name: debug-release
on:
  pull_request: {}
  workflow_dispatch: {}
env:
  NX_BRANCH: mainline
  NX_RUN_GROUP: ${{ github.run_id }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: ${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'mainline'
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: Synth Project
        run: npx projen
      - name: Build
        run: npx nx run-many --target=build --all --parallel=4 --output-style stream --nx-bail
      - name: Debug:Sharp:Build
        working-directory: packages/cdk-graph-plugin-diagram
        run: tar -ztvf ./dist/js/cdk-graph-plugin-diagram@0.0.0.jsii.tgz -v --wildcards 'package/node_modules/sharp/*'
      - name: Release
        run: npx nx run-many --target=release:mainline --all --parallel=4 --output-style stream --nx-bail
#       - name: Check for mutations
#         run: git diff --ignore-space-at-eol --exit-code
#       - name: Check for new commits
#         id: git_remote
#         run: echo ::set-output name=latest_commit::"$(git ls-remote origin -h ${{ github.ref }} | cut -f1)"
      - name: Extract Dists
        run: rsync -a . ./dist --include="*/" --include="/public/docs/dist/**" --include="/packages/*/dist/**" --exclude="*" --prune-empty-dirs
      - name: Debug:Sharp:Extract
        working-directory: dist/packages/cdk-graph-plugin-diagram
        run: tar -ztvf ./dist/js/cdk-graph-plugin-diagram@0.*.*.jsii.tgz -v --wildcards 'package/node_modules/sharp/*'
      - name: Upload artifact
        if: ${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: build-artifact
          path: dist
  release_npm:
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: dist
      - name: Debug:Sharp:Extract
        working-directory: dist/packages/cdk-graph-plugin-diagram
        run: tar -ztvf ./dist/js/cdk-graph-plugin-diagram@0.*.*.jsii.tgz -v --wildcards 'package/node_modules/sharp/*'
