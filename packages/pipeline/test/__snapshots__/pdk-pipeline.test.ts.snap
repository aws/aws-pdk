// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PDK Pipeline Unit Tests CrossAccount - using AwsPrototyping NagPack 1`] = `
Object {
  "Outputs": Object {
    "CrossAccountCodeRepositoryGRCUrlA496E759": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "codecommit::",
            Object {
              "Ref": "AWS::Region",
            },
            "://",
            Object {
              "Fn::GetAtt": Array [
                "CrossAccountCodeRepositoryCF9338D3",
                "Name",
              ],
            },
          ],
        ],
      },
    },
    "CrossAccountSonarCodeScannerSonarqubeSecretArn67524D2A": Object {
      "Value": Object {
        "Ref": "CrossAccountSonarCodeScannerSonarQubeToken76921F1B",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CrossAccountAccessLogsBucketAutoDeleteObjectsCustomResourceBF4BDBC9": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CrossAccountAccessLogsBucketPolicy04189EE5",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "CrossAccountAccessLogsBucketD7D72FC7",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountAccessLogsBucketD7D72FC7": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountAccessLogsBucketPolicy04189EE5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CrossAccountAccessLogsBucketD7D72FC7",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountAccessLogsBucketD7D72FC7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountAccessLogsBucketD7D72FC7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountAccessLogsBucketD7D72FC7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountAccessLogsBucketD7D72FC7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "ArnLike": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "CrossAccountArtifactsBucketA490794E",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CrossAccountAccessLogsBucketD7D72FC7",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CrossAccountArtifactKey7D4916D3": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountArtifactsBucketA490794E": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactKey7D4916D3",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "CrossAccountAccessLogsBucketD7D72FC7",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountArtifactsBucketAutoDeleteObjectsCustomResourceDA0BD596": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CrossAccountArtifactsBucketPolicyA1EA6713",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "CrossAccountArtifactsBucketA490794E",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountArtifactsBucketPolicyA1EA6713": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CrossAccountArtifactsBucketA490794E",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CrossAccountAssetsFileAsset1A747E04B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": Object {
          "Fn::GetAtt": Array [
            "CrossAccountArtifactKey7D4916D3",
            "Arn",
          ],
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "CrossAccountAssetsFileRoleA62CD5A0",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-Stage/StageAppStack7618C9EF.assets.json\\\\\\" --verbose publish \\\\\\"43559360d7c264e7c786aba128df39186007c2ca4d04d8bcac25f871d521ed4a:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountAssetsFileRoleA62CD5A0": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountAssetsFileRoleDefaultPolicy75C80F22": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountAssetsFileRoleDefaultPolicy75C80F22",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountAssetsFileRoleA62CD5A0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodeBuildActionRoleAD915E6A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "Bool": Object {
                  "aws:ViaAWSService": "codepipeline.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodeBuildActionRoleDefaultPolicy49AAE258": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountAssetsFileAsset1A747E04B",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodeBuildActionRoleDefaultPolicy49AAE258",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountCodeBuildActionRoleAD915E6A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": Object {
          "Fn::GetAtt": Array [
            "CrossAccountArtifactKey7D4916D3",
            "Arn",
          ],
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "BRANCH",
              "Type": "PLAINTEXT",
              "Value": "mainline",
            },
          ],
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "CrossAccountCodePipelineBuildSynthCdkBuildProjectRole06CF955F",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"npx nx run-many --target=build --all\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"secondary-artifacts\\": {
      \\"Synth_Output\\": {
        \\"base-directory\\": \\"cdk.out\\",
        \\"files\\": \\"**/*\\"
      },
      \\"Synth__\\": {
        \\"base-directory\\": \\".\\",
        \\"files\\": \\"**/*\\"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountCodePipelineBuildSynthCdkBuildProjectRole06CF955F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy94879C97": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy94879C97",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProjectRole06CF955F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodePipelineEventsRoleCF998AEF": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodePipelineEventsRoleDefaultPolicyCDDAD89A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "CrossAccountCodePipelineFE6BA407",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodePipelineEventsRoleDefaultPolicyCDDAD89A",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountCodePipelineEventsRoleCF998AEF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodePipelineFE6BA407": Object {
      "DependsOn": Array [
        "CrossAccountCodePipelineRoleDefaultPolicyB81D2E54",
        "CrossAccountCodePipelineRole6867FC22",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "ArtifactStore": Object {
          "EncryptionKey": Object {
            "Id": Object {
              "Fn::GetAtt": Array [
                "CrossAccountArtifactKey7D4916D3",
                "Arn",
              ],
            },
            "Type": "KMS",
          },
          "Location": Object {
            "Ref": "CrossAccountArtifactsBucketA490794E",
          },
          "Type": "S3",
        },
        "RestartExecutionOnUpdate": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CrossAccountCodePipelineRole6867FC22",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "mainline",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::GetAtt": Array [
                      "CrossAccountCodeRepositoryCF9338D3",
                      "Name",
                    ],
                  },
                },
                "Name": Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountCodeRepositoryCF9338D3",
                    "Name",
                  ],
                },
                "OutputArtifacts": Array [
                  Object {
                    "Name": "c8323abab1481846407037ff91e03fe414541ba20b_Source",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRole1A00297F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"7cb930276e2c624899dadc5cd557500f267ff825956ffae5529d532ebc7f659d\\"}]",
                  "ProjectName": Object {
                    "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "c8323abab1481846407037ff91e03fe414541ba20b_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                  Object {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountCodeBuildActionRoleAD915E6A",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"e437283b833a76d1459ba3b9b11f0bf0f0c58fc4c9c6a130298f52e21508b79e\\"}]",
                  "ProjectName": Object {
                    "Ref": "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountCodeBuildActionRoleAD915E6A",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "CrossAccountAssetsFileAsset1A747E04B",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountCodeBuildActionRoleAD915E6A",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        Object {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "CrossAccountCodePipelineRole6867FC22": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodePipelineRoleDefaultPolicyB81D2E54": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRole1A00297F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountCodeBuildActionRoleAD915E6A",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    Object {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodePipelineRoleDefaultPolicyB81D2E54",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountCodePipelineRole6867FC22",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRole1A00297F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy443B61A0": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountCodeRepositoryCF9338D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy443B61A0",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRole1A00297F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodeRepositoryCF9338D3": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "RepositoryName": "Defaults",
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "CrossAccountCodeRepositoryCrossAccountCodePipelineE9B4FFC3mainlineEventRule3B7BD205": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "mainline",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "CrossAccountCodeRepositoryCF9338D3",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  Object {
                    "Ref": "CrossAccountCodePipelineFE6BA407",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "CrossAccountCodePipelineEventsRoleCF998AEF",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CrossAccountSonarCodeScannerSonarQubeToken76921F1B": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-SMG4",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            Object {
              "id": "AwsPrototyping-SecretsManagerRotationEnabled",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "GenerateSecretString": Object {},
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountSonarCodeScannerSynthBuildProjectOnSynthSuccessD24D011A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "build-status": Array [
              "SUCCEEDED",
            ],
            "project-name": Array [
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              ":",
                              Object {
                                "Fn::GetAtt": Array [
                                  "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          "detail-type": Array [
            "CodeBuild Build State Change",
          ],
          "source": Array [
            "aws.codebuild",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputTransformer": Object {
              "InputPathsMap": Object {
                "detail-build-id": "$.detail.build-id",
              },
              "InputTemplate": "{\\"environmentVariablesOverride\\":[{\\"name\\":\\"SYNTH_BUILD_ID\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":<detail-build-id>}]}",
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "CrossAccountSonarCodeScannerValidationProjectEventsRole551D56DA",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CrossAccountSonarCodeScannerValidationProjectAA1083C3": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "SONARQUBE_TOKEN",
              "Type": "SECRETS_MANAGER",
              "Value": Object {
                "Ref": "CrossAccountSonarCodeScannerSonarQubeToken76921F1B",
              },
            },
            Object {
              "Name": "SONARQUBE_ENDPOINT",
              "Type": "PLAINTEXT",
              "Value": "https://sonar.dev",
            },
            Object {
              "Name": "PROJECT_NAME",
              "Type": "PLAINTEXT",
              "Value": "Default",
            },
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "CrossAccountSonarCodeScannerValidationProjectRole25023DA5",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"env\\": {
    \\"shell\\": \\"bash\\"
  },
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"gem install cfn-nag\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"export RESOLVED_SOURCE_VERSION=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].resolvedSourceVersion'\`\\",
        \\"export BUILT_ARTIFACT_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].secondaryArtifacts[] | select(.artifactIdentifier == \\\\\\"Synth__\\\\\\") | .location' | awk '{sub(\\\\\\"arn:aws:s3:::\\\\\\",\\\\\\"s3://\\\\\\")}1' $1\`\\",
        \\"export SYNTH_SOURCE_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].sourceVersion' | awk '{sub(\\\\\\"arn:aws:s3:::\\\\\\",\\\\\\"s3://\\\\\\")}1' $1\`\\",
        \\"aws s3 cp $SYNTH_SOURCE_URI source.zip\\",
        \\"aws s3 cp $BUILT_ARTIFACT_URI built.zip\\",
        \\"unzip source.zip -d src\\",
        \\"unzip built.zip -d built\\",
        \\"rm source.zip built.zip\\",
        \\"rsync -a built/* src --include=\\\\\\"*/\\\\\\"  --include=\\\\\\"**/coverage/**\\\\\\" --include=\\\\\\"**/cdk.out/**\\\\\\" --exclude=\\\\\\"**/node_modules/**/*\\\\\\" --exclude=\\\\\\"**/.env/**\\\\\\" --exclude=\\\\\\"*\\\\\\" --prune-empty-dirs\\",
        \\"CREATE_PROJECT_OUTPUT=\`curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/projects/create?name=$PROJECT_NAME&project=$PROJECT_NAME&visibility=private\\\\\\" \`\\",
        \\"if [[ \\\\\\"$(echo $CREATE_PROJECT_OUTPUT | jq .errors)\\\\\\" == \\\\\\"null\\\\\\" ]]; then curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=admin\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=codeviewer\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=issueadmin\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=securityhotspotadmin\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=scan\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=user\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/project_branches/rename?project=$PROJECT_NAME&name=mainline\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/project_tags/set?project=$PROJECT_NAME&tags=dev\\\\\\" ;export DEFAULT_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=dev\\\\\\"  | jq .profiles\`;export SPECIFIC_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=undefined\\\\\\"  | jq .profiles\`;export MERGED_PROFILES=\`jq --argjson arr1 \\\\\\"$DEFAULT_PROFILE\\\\\\" --argjson arr2 \\\\\\"$SPECIFIC_PROFILE\\\\\\" -n '$arr1 + $arr2 | group_by(.language) | map(.[-1])'\`;echo $MERGED_PROFILES | jq -c '.[]' | while read i; do curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualityprofiles/add_project?project=$PROJECT_NAME&language=\`echo $i | jq -r .language\`&qualityProfile=\`echo $i | jq -r .name\`\\\\\\" ; done;export DEFAULT_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=dev\\\\\\" \`;export SPECIFIC_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=undefined\\\\\\" \`;if [[ \\\\\\"$(echo $SPECIFIC_GATE | jq .errors)\\\\\\" == \\\\\\"null\\\\\\" && \\\\\\"$(echo $SPECIFIC_GATE | jq '.results | length')\\\\\\" -gt 0 ]]; then export GATE_NAME=undefined; else export GATE_NAME=dev; fi;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualitygates/select?projectKey=$PROJECT_NAME&gateName=$GATE_NAME\\\\\\" ; fi;\\",
        \\"mkdir -p src/reports\\",
        \\"npx owasp-dependency-check --format HTML --out src/reports --exclude '**/.git/**/*' --scan src --enableExperimental --bin /tmp/dep-check --disableRetireJS\\",
        \\"cfn_nag  built/cdk.out/**/*.template.json --output-format=json > src/reports/cfn-nag-report.json\\",
        \\"cd src\\",
        \\"npx sonarqube-scanner -Dsonar.login=$SONARQUBE_TOKEN -Dsonar.projectKey=$PROJECT_NAME -Dsonar.projectName=$PROJECT_NAME -Dsonar.projectVersion=\`echo $RESOLVED_SOURCE_VERSION | cut -c1-7\` -Dsonar.branch.name=mainline -Dsonar.host.url=$SONARQUBE_ENDPOINT -Dsonar.cfn.nag.reportFiles=reports/cfn-nag-report.json -Dsonar.dependencyCheck.htmlReportPath=reports/dependency-check-report.html -Dsonar.javascript.lcov.reportPaths=**/coverage/lcov.info -Dsonar.clover.reportPath=**/coverage/clover.xml -Dsonar.exclusions=\\\\\\"**/reports/**,**/coverage/**\\\\\\" -Dsonar.sources=.\\",
        \\"curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf_issues_breakdown?resource=$PROJECT_NAME&branch=mainline\\\\\\" --output reports/prototype-issues-report.pdf\\",
        \\"curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf?resource=$PROJECT_NAME&branch=mainline\\\\\\" --output reports/prototype-executive-report.pdf\\",
        \\"curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/security_reports/download?project=$PROJECT_NAME\\\\\\" --output reports/prototype-security-report.pdf\\"
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountSonarCodeScannerValidationProjectEventsRole551D56DA": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountSonarCodeScannerValidationProjectEventsRoleDefaultPolicy1B23C513": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountSonarCodeScannerValidationProjectEventsRoleDefaultPolicy1B23C513",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountSonarCodeScannerValidationProjectEventsRole551D56DA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountSonarCodeScannerValidationProjectRole25023DA5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountSonarCodeScannerValidationProjectRoleDefaultPolicy225AB8B2": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "CrossAccountSonarCodeScannerSonarQubeToken76921F1B",
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "codebuild:BatchGetBuilds",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/**",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountSonarCodeScannerValidationProjectRoleDefaultPolicy225AB8B2",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountSonarCodeScannerValidationProjectRole25023DA5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountUpdatePipelineSelfMutationEC1756F0": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": Object {
          "Fn::GetAtt": Array [
            "CrossAccountArtifactKey7D4916D3",
            "Arn",
          ],
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "CrossAccountUpdatePipelineSelfMutationRole0F9342FC",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk -a . deploy Default --require-approval=never --verbose\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountUpdatePipelineSelfMutationRole0F9342FC": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountUpdatePipelineSelfMutationRoleDefaultPolicyA7DA8F1E": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountUpdatePipelineSelfMutationRoleDefaultPolicyA7DA8F1E",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountUpdatePipelineSelfMutationRole0F9342FC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "CrossAccountAccessLogsBucketD7D72FC7",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests CrossAccount 1`] = `
Object {
  "Outputs": Object {
    "CrossAccountCodeRepositoryGRCUrlA496E759": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "codecommit::",
            Object {
              "Ref": "AWS::Region",
            },
            "://",
            Object {
              "Fn::GetAtt": Array [
                "CrossAccountCodeRepositoryCF9338D3",
                "Name",
              ],
            },
          ],
        ],
      },
    },
    "CrossAccountSonarCodeScannerSonarqubeSecretArn67524D2A": Object {
      "Value": Object {
        "Ref": "CrossAccountSonarCodeScannerSonarQubeToken76921F1B",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CrossAccountAccessLogsBucketAutoDeleteObjectsCustomResourceBF4BDBC9": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CrossAccountAccessLogsBucketPolicy04189EE5",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "CrossAccountAccessLogsBucketD7D72FC7",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountAccessLogsBucketD7D72FC7": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountAccessLogsBucketPolicy04189EE5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CrossAccountAccessLogsBucketD7D72FC7",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountAccessLogsBucketD7D72FC7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountAccessLogsBucketD7D72FC7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountAccessLogsBucketD7D72FC7",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountAccessLogsBucketD7D72FC7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "ArnLike": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "CrossAccountArtifactsBucketA490794E",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CrossAccountAccessLogsBucketD7D72FC7",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CrossAccountArtifactKey7D4916D3": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountArtifactsBucketA490794E": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactKey7D4916D3",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "CrossAccountAccessLogsBucketD7D72FC7",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountArtifactsBucketAutoDeleteObjectsCustomResourceDA0BD596": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CrossAccountArtifactsBucketPolicyA1EA6713",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "CrossAccountArtifactsBucketA490794E",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountArtifactsBucketPolicyA1EA6713": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CrossAccountArtifactsBucketA490794E",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CrossAccountAssetsFileAsset1A747E04B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": Object {
          "Fn::GetAtt": Array [
            "CrossAccountArtifactKey7D4916D3",
            "Arn",
          ],
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "CrossAccountAssetsFileRoleA62CD5A0",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-Stage/StageAppStack7618C9EF.assets.json\\\\\\" --verbose publish \\\\\\"43559360d7c264e7c786aba128df39186007c2ca4d04d8bcac25f871d521ed4a:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountAssetsFileRoleA62CD5A0": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountAssetsFileRoleDefaultPolicy75C80F22": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountAssetsFileRoleDefaultPolicy75C80F22",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountAssetsFileRoleA62CD5A0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodeBuildActionRoleAD915E6A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "Bool": Object {
                  "aws:ViaAWSService": "codepipeline.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodeBuildActionRoleDefaultPolicy49AAE258": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountAssetsFileAsset1A747E04B",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodeBuildActionRoleDefaultPolicy49AAE258",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountCodeBuildActionRoleAD915E6A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": Object {
          "Fn::GetAtt": Array [
            "CrossAccountArtifactKey7D4916D3",
            "Arn",
          ],
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "BRANCH",
              "Type": "PLAINTEXT",
              "Value": "mainline",
            },
          ],
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "CrossAccountCodePipelineBuildSynthCdkBuildProjectRole06CF955F",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"npx nx run-many --target=build --all\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"secondary-artifacts\\": {
      \\"Synth_Output\\": {
        \\"base-directory\\": \\"cdk.out\\",
        \\"files\\": \\"**/*\\"
      },
      \\"Synth__\\": {
        \\"base-directory\\": \\".\\",
        \\"files\\": \\"**/*\\"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountCodePipelineBuildSynthCdkBuildProjectRole06CF955F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy94879C97": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy94879C97",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProjectRole06CF955F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodePipelineEventsRoleCF998AEF": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodePipelineEventsRoleDefaultPolicyCDDAD89A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "CrossAccountCodePipelineFE6BA407",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodePipelineEventsRoleDefaultPolicyCDDAD89A",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountCodePipelineEventsRoleCF998AEF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodePipelineFE6BA407": Object {
      "DependsOn": Array [
        "CrossAccountCodePipelineRoleDefaultPolicyB81D2E54",
        "CrossAccountCodePipelineRole6867FC22",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "ArtifactStore": Object {
          "EncryptionKey": Object {
            "Id": Object {
              "Fn::GetAtt": Array [
                "CrossAccountArtifactKey7D4916D3",
                "Arn",
              ],
            },
            "Type": "KMS",
          },
          "Location": Object {
            "Ref": "CrossAccountArtifactsBucketA490794E",
          },
          "Type": "S3",
        },
        "RestartExecutionOnUpdate": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CrossAccountCodePipelineRole6867FC22",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "mainline",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::GetAtt": Array [
                      "CrossAccountCodeRepositoryCF9338D3",
                      "Name",
                    ],
                  },
                },
                "Name": Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountCodeRepositoryCF9338D3",
                    "Name",
                  ],
                },
                "OutputArtifacts": Array [
                  Object {
                    "Name": "c8323abab1481846407037ff91e03fe414541ba20b_Source",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRole1A00297F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"7cb930276e2c624899dadc5cd557500f267ff825956ffae5529d532ebc7f659d\\"}]",
                  "ProjectName": Object {
                    "Ref": "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "c8323abab1481846407037ff91e03fe414541ba20b_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                  Object {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountCodeBuildActionRoleAD915E6A",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"e437283b833a76d1459ba3b9b11f0bf0f0c58fc4c9c6a130298f52e21508b79e\\"}]",
                  "ProjectName": Object {
                    "Ref": "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountCodeBuildActionRoleAD915E6A",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "CrossAccountAssetsFileAsset1A747E04B",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountCodeBuildActionRoleAD915E6A",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        Object {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "CrossAccountCodePipelineRole6867FC22": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodePipelineRoleDefaultPolicyB81D2E54": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRole1A00297F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountCodeBuildActionRoleAD915E6A",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    Object {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodePipelineRoleDefaultPolicyB81D2E54",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountCodePipelineRole6867FC22",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRole1A00297F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy443B61A0": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountCodeRepositoryCF9338D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicy443B61A0",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountCodePipelineSourceCodeCommitCodePipelineActionRole1A00297F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountCodeRepositoryCF9338D3": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "RepositoryName": "Defaults",
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "CrossAccountCodeRepositoryCrossAccountCodePipelineE9B4FFC3mainlineEventRule3B7BD205": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "mainline",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "CrossAccountCodeRepositoryCF9338D3",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  Object {
                    "Ref": "CrossAccountCodePipelineFE6BA407",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "CrossAccountCodePipelineEventsRoleCF998AEF",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CrossAccountSonarCodeScannerSonarQubeToken76921F1B": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-SMG4",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            Object {
              "id": "AwsPrototyping-SecretsManagerRotationEnabled",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "GenerateSecretString": Object {},
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "CrossAccountSonarCodeScannerSynthBuildProjectOnSynthSuccessD24D011A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "build-status": Array [
              "SUCCEEDED",
            ],
            "project-name": Array [
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              ":",
                              Object {
                                "Fn::GetAtt": Array [
                                  "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          "detail-type": Array [
            "CodeBuild Build State Change",
          ],
          "source": Array [
            "aws.codebuild",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputTransformer": Object {
              "InputPathsMap": Object {
                "detail-build-id": "$.detail.build-id",
              },
              "InputTemplate": "{\\"environmentVariablesOverride\\":[{\\"name\\":\\"SYNTH_BUILD_ID\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":<detail-build-id>}]}",
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "CrossAccountSonarCodeScannerValidationProjectEventsRole551D56DA",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CrossAccountSonarCodeScannerValidationProjectAA1083C3": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "SONARQUBE_TOKEN",
              "Type": "SECRETS_MANAGER",
              "Value": Object {
                "Ref": "CrossAccountSonarCodeScannerSonarQubeToken76921F1B",
              },
            },
            Object {
              "Name": "SONARQUBE_ENDPOINT",
              "Type": "PLAINTEXT",
              "Value": "https://sonar.dev",
            },
            Object {
              "Name": "PROJECT_NAME",
              "Type": "PLAINTEXT",
              "Value": "Default",
            },
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "CrossAccountSonarCodeScannerValidationProjectRole25023DA5",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"env\\": {
    \\"shell\\": \\"bash\\"
  },
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"gem install cfn-nag\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"export RESOLVED_SOURCE_VERSION=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].resolvedSourceVersion'\`\\",
        \\"export BUILT_ARTIFACT_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].secondaryArtifacts[] | select(.artifactIdentifier == \\\\\\"Synth__\\\\\\") | .location' | awk '{sub(\\\\\\"arn:aws:s3:::\\\\\\",\\\\\\"s3://\\\\\\")}1' $1\`\\",
        \\"export SYNTH_SOURCE_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].sourceVersion' | awk '{sub(\\\\\\"arn:aws:s3:::\\\\\\",\\\\\\"s3://\\\\\\")}1' $1\`\\",
        \\"aws s3 cp $SYNTH_SOURCE_URI source.zip\\",
        \\"aws s3 cp $BUILT_ARTIFACT_URI built.zip\\",
        \\"unzip source.zip -d src\\",
        \\"unzip built.zip -d built\\",
        \\"rm source.zip built.zip\\",
        \\"rsync -a built/* src --include=\\\\\\"*/\\\\\\"  --include=\\\\\\"**/coverage/**\\\\\\" --include=\\\\\\"**/cdk.out/**\\\\\\" --exclude=\\\\\\"**/node_modules/**/*\\\\\\" --exclude=\\\\\\"**/.env/**\\\\\\" --exclude=\\\\\\"*\\\\\\" --prune-empty-dirs\\",
        \\"CREATE_PROJECT_OUTPUT=\`curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/projects/create?name=$PROJECT_NAME&project=$PROJECT_NAME&visibility=private\\\\\\" \`\\",
        \\"if [[ \\\\\\"$(echo $CREATE_PROJECT_OUTPUT | jq .errors)\\\\\\" == \\\\\\"null\\\\\\" ]]; then curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=admin\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=codeviewer\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=issueadmin\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=securityhotspotadmin\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=scan\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=user\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/project_branches/rename?project=$PROJECT_NAME&name=mainline\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/project_tags/set?project=$PROJECT_NAME&tags=dev\\\\\\" ;export DEFAULT_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=dev\\\\\\"  | jq .profiles\`;export SPECIFIC_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=undefined\\\\\\"  | jq .profiles\`;export MERGED_PROFILES=\`jq --argjson arr1 \\\\\\"$DEFAULT_PROFILE\\\\\\" --argjson arr2 \\\\\\"$SPECIFIC_PROFILE\\\\\\" -n '$arr1 + $arr2 | group_by(.language) | map(.[-1])'\`;echo $MERGED_PROFILES | jq -c '.[]' | while read i; do curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualityprofiles/add_project?project=$PROJECT_NAME&language=\`echo $i | jq -r .language\`&qualityProfile=\`echo $i | jq -r .name\`\\\\\\" ; done;export DEFAULT_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=dev\\\\\\" \`;export SPECIFIC_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=undefined\\\\\\" \`;if [[ \\\\\\"$(echo $SPECIFIC_GATE | jq .errors)\\\\\\" == \\\\\\"null\\\\\\" && \\\\\\"$(echo $SPECIFIC_GATE | jq '.results | length')\\\\\\" -gt 0 ]]; then export GATE_NAME=undefined; else export GATE_NAME=dev; fi;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualitygates/select?projectKey=$PROJECT_NAME&gateName=$GATE_NAME\\\\\\" ; fi;\\",
        \\"mkdir -p src/reports\\",
        \\"npx owasp-dependency-check --format HTML --out src/reports --exclude '**/.git/**/*' --scan src --enableExperimental --bin /tmp/dep-check --disableRetireJS\\",
        \\"cfn_nag  built/cdk.out/**/*.template.json --output-format=json > src/reports/cfn-nag-report.json\\",
        \\"cd src\\",
        \\"npx sonarqube-scanner -Dsonar.login=$SONARQUBE_TOKEN -Dsonar.projectKey=$PROJECT_NAME -Dsonar.projectName=$PROJECT_NAME -Dsonar.projectVersion=\`echo $RESOLVED_SOURCE_VERSION | cut -c1-7\` -Dsonar.branch.name=mainline -Dsonar.host.url=$SONARQUBE_ENDPOINT -Dsonar.cfn.nag.reportFiles=reports/cfn-nag-report.json -Dsonar.dependencyCheck.htmlReportPath=reports/dependency-check-report.html -Dsonar.javascript.lcov.reportPaths=**/coverage/lcov.info -Dsonar.clover.reportPath=**/coverage/clover.xml -Dsonar.exclusions=\\\\\\"**/reports/**,**/coverage/**\\\\\\" -Dsonar.sources=.\\",
        \\"curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf_issues_breakdown?resource=$PROJECT_NAME&branch=mainline\\\\\\" --output reports/prototype-issues-report.pdf\\",
        \\"curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf?resource=$PROJECT_NAME&branch=mainline\\\\\\" --output reports/prototype-executive-report.pdf\\",
        \\"curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/security_reports/download?project=$PROJECT_NAME\\\\\\" --output reports/prototype-security-report.pdf\\"
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountSonarCodeScannerValidationProjectEventsRole551D56DA": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountSonarCodeScannerValidationProjectEventsRoleDefaultPolicy1B23C513": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountSonarCodeScannerValidationProjectEventsRoleDefaultPolicy1B23C513",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountSonarCodeScannerValidationProjectEventsRole551D56DA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountSonarCodeScannerValidationProjectRole25023DA5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountSonarCodeScannerValidationProjectRoleDefaultPolicy225AB8B2": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "CrossAccountSonarCodeScannerSonarQubeToken76921F1B",
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "CrossAccountSonarCodeScannerValidationProjectAA1083C3",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "codebuild:BatchGetBuilds",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountCodePipelineBuildSynthCdkBuildProject938B55FC",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/**",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountSonarCodeScannerValidationProjectRoleDefaultPolicy225AB8B2",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountSonarCodeScannerValidationProjectRole25023DA5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CrossAccountUpdatePipelineSelfMutationEC1756F0": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": Object {
          "Fn::GetAtt": Array [
            "CrossAccountArtifactKey7D4916D3",
            "Arn",
          ],
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "CrossAccountUpdatePipelineSelfMutationRole0F9342FC",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk -a . deploy Default --require-approval=never --verbose\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CrossAccountUpdatePipelineSelfMutationRole0F9342FC": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountUpdatePipelineSelfMutationRoleDefaultPolicyA7DA8F1E": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "CrossAccountUpdatePipelineSelfMutationEC1756F0",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CrossAccountArtifactsBucketA490794E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CrossAccountArtifactsBucketA490794E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CrossAccountArtifactKey7D4916D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountUpdatePipelineSelfMutationRoleDefaultPolicyA7DA8F1E",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountUpdatePipelineSelfMutationRole0F9342FC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "CrossAccountAccessLogsBucketD7D72FC7",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests Defaults - using AwsPrototyping NagPack 1`] = `
Object {
  "Outputs": Object {
    "DefaultsCodeRepositoryGRCUrlF9B2453F": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "codecommit::",
            Object {
              "Ref": "AWS::Region",
            },
            "://",
            Object {
              "Fn::GetAtt": Array [
                "DefaultsCodeRepositoryBDE0B808",
                "Name",
              ],
            },
          ],
        ],
      },
    },
    "DefaultsSonarCodeScannerSonarqubeSecretArn61BE693F": Object {
      "Value": Object {
        "Ref": "DefaultsSonarCodeScannerSonarQubeTokenD1898305",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "DefaultsAccessLogsBucket1E788CBC",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsAccessLogsBucket1E788CBC": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsAccessLogsBucketAutoDeleteObjectsCustomResourceB315E04B": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DefaultsAccessLogsBucketPolicy87291CAB",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DefaultsAccessLogsBucket1E788CBC",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsAccessLogsBucketPolicy87291CAB": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DefaultsAccessLogsBucket1E788CBC",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsAccessLogsBucket1E788CBC",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsAccessLogsBucket1E788CBC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsAccessLogsBucket1E788CBC",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsAccessLogsBucket1E788CBC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "ArnLike": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "DefaultsArtifactsBucket267E29E1",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DefaultsAccessLogsBucket1E788CBC",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DefaultsArtifactsBucket267E29E1": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "DefaultsAccessLogsBucket1E788CBC",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsArtifactsBucketAutoDeleteObjectsCustomResourceED1B0B57": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DefaultsArtifactsBucketPolicyA6159620",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DefaultsArtifactsBucket267E29E1",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsArtifactsBucketPolicyA6159620": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DefaultsArtifactsBucket267E29E1",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DefaultsAssetsFileAsset1C016008C": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "DefaultsAssetsFileRole651D25B9",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-Stage/StageAppStack7618C9EF.assets.json\\\\\\" --verbose publish \\\\\\"43559360d7c264e7c786aba128df39186007c2ca4d04d8bcac25f871d521ed4a:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsAssetsFileRole651D25B9": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsAssetsFileRoleDefaultPolicy3887BD04": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsAssetsFileRoleDefaultPolicy3887BD04",
        "Roles": Array [
          Object {
            "Ref": "DefaultsAssetsFileRole651D25B9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodeBuildActionRole26049CBA": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "Bool": Object {
                  "aws:ViaAWSService": "codepipeline.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodeBuildActionRoleDefaultPolicy0F3A543D": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsUpdatePipelineSelfMutationD1F1D812",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsAssetsFileAsset1C016008C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodeBuildActionRoleDefaultPolicy0F3A543D",
        "Roles": Array [
          Object {
            "Ref": "DefaultsCodeBuildActionRole26049CBA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineBuildSynthCdkBuildProject81772484": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "BRANCH",
              "Type": "PLAINTEXT",
              "Value": "mainline",
            },
          ],
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleA72DCE39",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"npx nx run-many --target=build --all\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"secondary-artifacts\\": {
      \\"Synth_Output\\": {
        \\"base-directory\\": \\"cdk.out\\",
        \\"files\\": \\"**/*\\"
      },
      \\"Synth__\\": {
        \\"base-directory\\": \\".\\",
        \\"files\\": \\"**/*\\"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleA72DCE39": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyC0AFF59F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyC0AFF59F",
        "Roles": Array [
          Object {
            "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleA72DCE39",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineDAB2FB72": Object {
      "DependsOn": Array [
        "DefaultsCodePipelineRoleDefaultPolicyF4A44365",
        "DefaultsCodePipelineRoleF466C0E3",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "DefaultsArtifactsBucket267E29E1",
          },
          "Type": "S3",
        },
        "RestartExecutionOnUpdate": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "DefaultsCodePipelineRoleF466C0E3",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "mainline",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::GetAtt": Array [
                      "DefaultsCodeRepositoryBDE0B808",
                      "Name",
                    ],
                  },
                },
                "Name": Object {
                  "Fn::GetAtt": Array [
                    "DefaultsCodeRepositoryBDE0B808",
                    "Name",
                  ],
                },
                "OutputArtifacts": Array [
                  Object {
                    "Name": "c8be7966da6130450b89fe7dd9dced39142a8f041d_Source",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"7cb930276e2c624899dadc5cd557500f267ff825956ffae5529d532ebc7f659d\\"}]",
                  "ProjectName": Object {
                    "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "c8be7966da6130450b89fe7dd9dced39142a8f041d_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                  Object {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "DefaultsCodeBuildActionRole26049CBA",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"e437283b833a76d1459ba3b9b11f0bf0f0c58fc4c9c6a130298f52e21508b79e\\"}]",
                  "ProjectName": Object {
                    "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "DefaultsCodeBuildActionRole26049CBA",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "DefaultsAssetsFileAsset1C016008C",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "DefaultsCodeBuildActionRole26049CBA",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        Object {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "DefaultsCodePipelineEventsRole44B0ACD2": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineEventsRoleDefaultPolicyB0676072": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "DefaultsCodePipelineDAB2FB72",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineEventsRoleDefaultPolicyB0676072",
        "Roles": Array [
          Object {
            "Ref": "DefaultsCodePipelineEventsRole44B0ACD2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineRoleDefaultPolicyF4A44365": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsCodeBuildActionRole26049CBA",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    Object {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineRoleDefaultPolicyF4A44365",
        "Roles": Array [
          Object {
            "Ref": "DefaultsCodePipelineRoleF466C0E3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineRoleF466C0E3": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyF3026D6A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsCodeRepositoryBDE0B808",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyF3026D6A",
        "Roles": Array [
          Object {
            "Ref": "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodeRepositoryBDE0B808": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "RepositoryName": "Defaults",
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "DefaultsCodeRepositoryDefaultsCodePipeline4E276C62mainlineEventRule67A64C52": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "mainline",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "DefaultsCodeRepositoryBDE0B808",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  Object {
                    "Ref": "DefaultsCodePipelineDAB2FB72",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "DefaultsCodePipelineEventsRole44B0ACD2",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DefaultsSonarCodeScannerSonarQubeTokenD1898305": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-SMG4",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            Object {
              "id": "AwsPrototyping-SecretsManagerRotationEnabled",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "GenerateSecretString": Object {},
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsSonarCodeScannerSynthBuildProjectOnSynthSuccessE7E65027": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "build-status": Array [
              "SUCCEEDED",
            ],
            "project-name": Array [
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              ":",
                              Object {
                                "Fn::GetAtt": Array [
                                  "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          "detail-type": Array [
            "CodeBuild Build State Change",
          ],
          "source": Array [
            "aws.codebuild",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputTransformer": Object {
              "InputPathsMap": Object {
                "detail-build-id": "$.detail.build-id",
              },
              "InputTemplate": "{\\"environmentVariablesOverride\\":[{\\"name\\":\\"SYNTH_BUILD_ID\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":<detail-build-id>}]}",
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "DefaultsSonarCodeScannerValidationProjectEventsRole18DD9D4A",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DefaultsSonarCodeScannerValidationProjectEventsRole18DD9D4A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsSonarCodeScannerValidationProjectEventsRoleDefaultPolicy6C4FE447": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsSonarCodeScannerValidationProjectEventsRoleDefaultPolicy6C4FE447",
        "Roles": Array [
          Object {
            "Ref": "DefaultsSonarCodeScannerValidationProjectEventsRole18DD9D4A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsSonarCodeScannerValidationProjectFAE7BAD0": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "SONARQUBE_TOKEN",
              "Type": "SECRETS_MANAGER",
              "Value": Object {
                "Ref": "DefaultsSonarCodeScannerSonarQubeTokenD1898305",
              },
            },
            Object {
              "Name": "SONARQUBE_ENDPOINT",
              "Type": "PLAINTEXT",
              "Value": "https://sonar.dev",
            },
            Object {
              "Name": "PROJECT_NAME",
              "Type": "PLAINTEXT",
              "Value": "Default",
            },
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "DefaultsSonarCodeScannerValidationProjectRole6AF1A9E5",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"env\\": {
    \\"shell\\": \\"bash\\"
  },
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"gem install cfn-nag\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"export RESOLVED_SOURCE_VERSION=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].resolvedSourceVersion'\`\\",
        \\"export BUILT_ARTIFACT_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].secondaryArtifacts[] | select(.artifactIdentifier == \\\\\\"Synth__\\\\\\") | .location' | awk '{sub(\\\\\\"arn:aws:s3:::\\\\\\",\\\\\\"s3://\\\\\\")}1' $1\`\\",
        \\"export SYNTH_SOURCE_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].sourceVersion' | awk '{sub(\\\\\\"arn:aws:s3:::\\\\\\",\\\\\\"s3://\\\\\\")}1' $1\`\\",
        \\"aws s3 cp $SYNTH_SOURCE_URI source.zip\\",
        \\"aws s3 cp $BUILT_ARTIFACT_URI built.zip\\",
        \\"unzip source.zip -d src\\",
        \\"unzip built.zip -d built\\",
        \\"rm source.zip built.zip\\",
        \\"rsync -a built/* src --include=\\\\\\"*/\\\\\\"  --include=\\\\\\"**/coverage/**\\\\\\" --include=\\\\\\"**/cdk.out/**\\\\\\" --exclude=\\\\\\"**/node_modules/**/*\\\\\\" --exclude=\\\\\\"**/.env/**\\\\\\" --exclude=\\\\\\"*\\\\\\" --prune-empty-dirs\\",
        \\"CREATE_PROJECT_OUTPUT=\`curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/projects/create?name=$PROJECT_NAME&project=$PROJECT_NAME&visibility=private\\\\\\" \`\\",
        \\"if [[ \\\\\\"$(echo $CREATE_PROJECT_OUTPUT | jq .errors)\\\\\\" == \\\\\\"null\\\\\\" ]]; then curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=admin\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=codeviewer\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=issueadmin\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=securityhotspotadmin\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=scan\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=user\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/project_branches/rename?project=$PROJECT_NAME&name=mainline\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/project_tags/set?project=$PROJECT_NAME&tags=dev\\\\\\" ;export DEFAULT_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=dev\\\\\\"  | jq .profiles\`;export SPECIFIC_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=undefined\\\\\\"  | jq .profiles\`;export MERGED_PROFILES=\`jq --argjson arr1 \\\\\\"$DEFAULT_PROFILE\\\\\\" --argjson arr2 \\\\\\"$SPECIFIC_PROFILE\\\\\\" -n '$arr1 + $arr2 | group_by(.language) | map(.[-1])'\`;echo $MERGED_PROFILES | jq -c '.[]' | while read i; do curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualityprofiles/add_project?project=$PROJECT_NAME&language=\`echo $i | jq -r .language\`&qualityProfile=\`echo $i | jq -r .name\`\\\\\\" ; done;export DEFAULT_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=dev\\\\\\" \`;export SPECIFIC_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=undefined\\\\\\" \`;if [[ \\\\\\"$(echo $SPECIFIC_GATE | jq .errors)\\\\\\" == \\\\\\"null\\\\\\" && \\\\\\"$(echo $SPECIFIC_GATE | jq '.results | length')\\\\\\" -gt 0 ]]; then export GATE_NAME=undefined; else export GATE_NAME=dev; fi;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualitygates/select?projectKey=$PROJECT_NAME&gateName=$GATE_NAME\\\\\\" ; fi;\\",
        \\"mkdir -p src/reports\\",
        \\"npx owasp-dependency-check --format HTML --out src/reports --exclude '**/.git/**/*' --scan src --enableExperimental --bin /tmp/dep-check --disableRetireJS\\",
        \\"cfn_nag  built/cdk.out/**/*.template.json --output-format=json > src/reports/cfn-nag-report.json\\",
        \\"cd src\\",
        \\"npx sonarqube-scanner -Dsonar.login=$SONARQUBE_TOKEN -Dsonar.projectKey=$PROJECT_NAME -Dsonar.projectName=$PROJECT_NAME -Dsonar.projectVersion=\`echo $RESOLVED_SOURCE_VERSION | cut -c1-7\` -Dsonar.branch.name=mainline -Dsonar.host.url=$SONARQUBE_ENDPOINT -Dsonar.cfn.nag.reportFiles=reports/cfn-nag-report.json -Dsonar.dependencyCheck.htmlReportPath=reports/dependency-check-report.html -Dsonar.javascript.lcov.reportPaths=**/coverage/lcov.info -Dsonar.clover.reportPath=**/coverage/clover.xml -Dsonar.exclusions=\\\\\\"**/reports/**,**/coverage/**\\\\\\" -Dsonar.sources=.\\",
        \\"curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf_issues_breakdown?resource=$PROJECT_NAME&branch=mainline\\\\\\" --output reports/prototype-issues-report.pdf\\",
        \\"curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf?resource=$PROJECT_NAME&branch=mainline\\\\\\" --output reports/prototype-executive-report.pdf\\",
        \\"curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/security_reports/download?project=$PROJECT_NAME\\\\\\" --output reports/prototype-security-report.pdf\\"
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsSonarCodeScannerValidationProjectRole6AF1A9E5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsSonarCodeScannerValidationProjectRoleDefaultPolicyF147A45E": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DefaultsSonarCodeScannerSonarQubeTokenD1898305",
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "codebuild:BatchGetBuilds",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/**",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsSonarCodeScannerValidationProjectRoleDefaultPolicyF147A45E",
        "Roles": Array [
          Object {
            "Ref": "DefaultsSonarCodeScannerValidationProjectRole6AF1A9E5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsUpdatePipelineSelfMutationD1F1D812": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "DefaultsUpdatePipelineSelfMutationRole0C19159A",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk -a . deploy Default --require-approval=never --verbose\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsUpdatePipelineSelfMutationRole0C19159A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsUpdatePipelineSelfMutationRoleDefaultPolicyCE04D82F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsUpdatePipelineSelfMutationRoleDefaultPolicyCE04D82F",
        "Roles": Array [
          Object {
            "Ref": "DefaultsUpdatePipelineSelfMutationRole0C19159A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests Defaults 1`] = `
Object {
  "Outputs": Object {
    "DefaultsCodeRepositoryGRCUrlF9B2453F": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "codecommit::",
            Object {
              "Ref": "AWS::Region",
            },
            "://",
            Object {
              "Fn::GetAtt": Array [
                "DefaultsCodeRepositoryBDE0B808",
                "Name",
              ],
            },
          ],
        ],
      },
    },
    "DefaultsSonarCodeScannerSonarqubeSecretArn61BE693F": Object {
      "Value": Object {
        "Ref": "DefaultsSonarCodeScannerSonarQubeTokenD1898305",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "DefaultsAccessLogsBucket1E788CBC",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsAccessLogsBucket1E788CBC": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsAccessLogsBucketAutoDeleteObjectsCustomResourceB315E04B": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DefaultsAccessLogsBucketPolicy87291CAB",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DefaultsAccessLogsBucket1E788CBC",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsAccessLogsBucketPolicy87291CAB": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DefaultsAccessLogsBucket1E788CBC",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsAccessLogsBucket1E788CBC",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsAccessLogsBucket1E788CBC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsAccessLogsBucket1E788CBC",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsAccessLogsBucket1E788CBC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "ArnLike": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "DefaultsArtifactsBucket267E29E1",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DefaultsAccessLogsBucket1E788CBC",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DefaultsArtifactsBucket267E29E1": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "DefaultsAccessLogsBucket1E788CBC",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsArtifactsBucketAutoDeleteObjectsCustomResourceED1B0B57": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DefaultsArtifactsBucketPolicyA6159620",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DefaultsArtifactsBucket267E29E1",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsArtifactsBucketPolicyA6159620": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DefaultsArtifactsBucket267E29E1",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DefaultsAssetsFileAsset1C016008C": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "DefaultsAssetsFileRole651D25B9",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-Stage/StageAppStack7618C9EF.assets.json\\\\\\" --verbose publish \\\\\\"43559360d7c264e7c786aba128df39186007c2ca4d04d8bcac25f871d521ed4a:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsAssetsFileRole651D25B9": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsAssetsFileRoleDefaultPolicy3887BD04": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsAssetsFileRoleDefaultPolicy3887BD04",
        "Roles": Array [
          Object {
            "Ref": "DefaultsAssetsFileRole651D25B9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodeBuildActionRole26049CBA": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "Bool": Object {
                  "aws:ViaAWSService": "codepipeline.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodeBuildActionRoleDefaultPolicy0F3A543D": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsUpdatePipelineSelfMutationD1F1D812",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsAssetsFileAsset1C016008C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodeBuildActionRoleDefaultPolicy0F3A543D",
        "Roles": Array [
          Object {
            "Ref": "DefaultsCodeBuildActionRole26049CBA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineBuildSynthCdkBuildProject81772484": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "BRANCH",
              "Type": "PLAINTEXT",
              "Value": "mainline",
            },
          ],
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleA72DCE39",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"npx nx run-many --target=build --all\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"secondary-artifacts\\": {
      \\"Synth_Output\\": {
        \\"base-directory\\": \\"cdk.out\\",
        \\"files\\": \\"**/*\\"
      },
      \\"Synth__\\": {
        \\"base-directory\\": \\".\\",
        \\"files\\": \\"**/*\\"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleA72DCE39": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyC0AFF59F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicyC0AFF59F",
        "Roles": Array [
          Object {
            "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProjectRoleA72DCE39",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineDAB2FB72": Object {
      "DependsOn": Array [
        "DefaultsCodePipelineRoleDefaultPolicyF4A44365",
        "DefaultsCodePipelineRoleF466C0E3",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "DefaultsArtifactsBucket267E29E1",
          },
          "Type": "S3",
        },
        "RestartExecutionOnUpdate": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "DefaultsCodePipelineRoleF466C0E3",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "mainline",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::GetAtt": Array [
                      "DefaultsCodeRepositoryBDE0B808",
                      "Name",
                    ],
                  },
                },
                "Name": Object {
                  "Fn::GetAtt": Array [
                    "DefaultsCodeRepositoryBDE0B808",
                    "Name",
                  ],
                },
                "OutputArtifacts": Array [
                  Object {
                    "Name": "c8be7966da6130450b89fe7dd9dced39142a8f041d_Source",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"7cb930276e2c624899dadc5cd557500f267ff825956ffae5529d532ebc7f659d\\"}]",
                  "ProjectName": Object {
                    "Ref": "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "c8be7966da6130450b89fe7dd9dced39142a8f041d_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                  Object {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "DefaultsCodeBuildActionRole26049CBA",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"e437283b833a76d1459ba3b9b11f0bf0f0c58fc4c9c6a130298f52e21508b79e\\"}]",
                  "ProjectName": Object {
                    "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "DefaultsCodeBuildActionRole26049CBA",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "DefaultsAssetsFileAsset1C016008C",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "DefaultsCodeBuildActionRole26049CBA",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        Object {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "DefaultsCodePipelineEventsRole44B0ACD2": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineEventsRoleDefaultPolicyB0676072": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "DefaultsCodePipelineDAB2FB72",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineEventsRoleDefaultPolicyB0676072",
        "Roles": Array [
          Object {
            "Ref": "DefaultsCodePipelineEventsRole44B0ACD2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineRoleDefaultPolicyF4A44365": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsCodeBuildActionRole26049CBA",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    Object {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineRoleDefaultPolicyF4A44365",
        "Roles": Array [
          Object {
            "Ref": "DefaultsCodePipelineRoleF466C0E3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodePipelineRoleF466C0E3": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyF3026D6A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsCodeRepositoryBDE0B808",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyF3026D6A",
        "Roles": Array [
          Object {
            "Ref": "DefaultsCodePipelineSourceCodeCommitCodePipelineActionRole1F53CA96",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsCodeRepositoryBDE0B808": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "RepositoryName": "Defaults",
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "DefaultsCodeRepositoryDefaultsCodePipeline4E276C62mainlineEventRule67A64C52": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "mainline",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "DefaultsCodeRepositoryBDE0B808",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  Object {
                    "Ref": "DefaultsCodePipelineDAB2FB72",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "DefaultsCodePipelineEventsRole44B0ACD2",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DefaultsSonarCodeScannerSonarQubeTokenD1898305": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-SMG4",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            Object {
              "id": "AwsPrototyping-SecretsManagerRotationEnabled",
              "reason": "Key rotation is not possible as a user token needs to be generated from Sonarqube",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "GenerateSecretString": Object {},
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "DefaultsSonarCodeScannerSynthBuildProjectOnSynthSuccessE7E65027": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "build-status": Array [
              "SUCCEEDED",
            ],
            "project-name": Array [
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::Select": Array [
                          5,
                          Object {
                            "Fn::Split": Array [
                              ":",
                              Object {
                                "Fn::GetAtt": Array [
                                  "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                                  "Arn",
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
          "detail-type": Array [
            "CodeBuild Build State Change",
          ],
          "source": Array [
            "aws.codebuild",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputTransformer": Object {
              "InputPathsMap": Object {
                "detail-build-id": "$.detail.build-id",
              },
              "InputTemplate": "{\\"environmentVariablesOverride\\":[{\\"name\\":\\"SYNTH_BUILD_ID\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":<detail-build-id>}]}",
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "DefaultsSonarCodeScannerValidationProjectEventsRole18DD9D4A",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DefaultsSonarCodeScannerValidationProjectEventsRole18DD9D4A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsSonarCodeScannerValidationProjectEventsRoleDefaultPolicy6C4FE447": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsSonarCodeScannerValidationProjectEventsRoleDefaultPolicy6C4FE447",
        "Roles": Array [
          Object {
            "Ref": "DefaultsSonarCodeScannerValidationProjectEventsRole18DD9D4A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsSonarCodeScannerValidationProjectFAE7BAD0": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "SONARQUBE_TOKEN",
              "Type": "SECRETS_MANAGER",
              "Value": Object {
                "Ref": "DefaultsSonarCodeScannerSonarQubeTokenD1898305",
              },
            },
            Object {
              "Name": "SONARQUBE_ENDPOINT",
              "Type": "PLAINTEXT",
              "Value": "https://sonar.dev",
            },
            Object {
              "Name": "PROJECT_NAME",
              "Type": "PLAINTEXT",
              "Value": "Default",
            },
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "DefaultsSonarCodeScannerValidationProjectRole6AF1A9E5",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"env\\": {
    \\"shell\\": \\"bash\\"
  },
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"gem install cfn-nag\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"export RESOLVED_SOURCE_VERSION=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].resolvedSourceVersion'\`\\",
        \\"export BUILT_ARTIFACT_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].secondaryArtifacts[] | select(.artifactIdentifier == \\\\\\"Synth__\\\\\\") | .location' | awk '{sub(\\\\\\"arn:aws:s3:::\\\\\\",\\\\\\"s3://\\\\\\")}1' $1\`\\",
        \\"export SYNTH_SOURCE_URI=\`aws codebuild batch-get-builds --ids $SYNTH_BUILD_ID | jq -r '.builds[0].sourceVersion' | awk '{sub(\\\\\\"arn:aws:s3:::\\\\\\",\\\\\\"s3://\\\\\\")}1' $1\`\\",
        \\"aws s3 cp $SYNTH_SOURCE_URI source.zip\\",
        \\"aws s3 cp $BUILT_ARTIFACT_URI built.zip\\",
        \\"unzip source.zip -d src\\",
        \\"unzip built.zip -d built\\",
        \\"rm source.zip built.zip\\",
        \\"rsync -a built/* src --include=\\\\\\"*/\\\\\\"  --include=\\\\\\"**/coverage/**\\\\\\" --include=\\\\\\"**/cdk.out/**\\\\\\" --exclude=\\\\\\"**/node_modules/**/*\\\\\\" --exclude=\\\\\\"**/.env/**\\\\\\" --exclude=\\\\\\"*\\\\\\" --prune-empty-dirs\\",
        \\"CREATE_PROJECT_OUTPUT=\`curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/projects/create?name=$PROJECT_NAME&project=$PROJECT_NAME&visibility=private\\\\\\" \`\\",
        \\"if [[ \\\\\\"$(echo $CREATE_PROJECT_OUTPUT | jq .errors)\\\\\\" == \\\\\\"null\\\\\\" ]]; then curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=admin\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=codeviewer\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=issueadmin\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=securityhotspotadmin\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=scan\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/permissions/add_group?projectKey=$PROJECT_NAME&groupName=dev&permission=user\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/project_branches/rename?project=$PROJECT_NAME&name=mainline\\\\\\" ;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/project_tags/set?project=$PROJECT_NAME&tags=dev\\\\\\" ;export DEFAULT_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=dev\\\\\\"  | jq .profiles\`;export SPECIFIC_PROFILE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualityprofiles/search?qualityProfile=undefined\\\\\\"  | jq .profiles\`;export MERGED_PROFILES=\`jq --argjson arr1 \\\\\\"$DEFAULT_PROFILE\\\\\\" --argjson arr2 \\\\\\"$SPECIFIC_PROFILE\\\\\\" -n '$arr1 + $arr2 | group_by(.language) | map(.[-1])'\`;echo $MERGED_PROFILES | jq -c '.[]' | while read i; do curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualityprofiles/add_project?project=$PROJECT_NAME&language=\`echo $i | jq -r .language\`&qualityProfile=\`echo $i | jq -r .name\`\\\\\\" ; done;export DEFAULT_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=dev\\\\\\" \`;export SPECIFIC_GATE=\`curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualitygates/search?gateName=undefined\\\\\\" \`;if [[ \\\\\\"$(echo $SPECIFIC_GATE | jq .errors)\\\\\\" == \\\\\\"null\\\\\\" && \\\\\\"$(echo $SPECIFIC_GATE | jq '.results | length')\\\\\\" -gt 0 ]]; then export GATE_NAME=undefined; else export GATE_NAME=dev; fi;curl -X POST -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/qualitygates/select?projectKey=$PROJECT_NAME&gateName=$GATE_NAME\\\\\\" ; fi;\\",
        \\"mkdir -p src/reports\\",
        \\"npx owasp-dependency-check --format HTML --out src/reports --exclude '**/.git/**/*' --scan src --enableExperimental --bin /tmp/dep-check --disableRetireJS\\",
        \\"cfn_nag  built/cdk.out/**/*.template.json --output-format=json > src/reports/cfn-nag-report.json\\",
        \\"cd src\\",
        \\"npx sonarqube-scanner -Dsonar.login=$SONARQUBE_TOKEN -Dsonar.projectKey=$PROJECT_NAME -Dsonar.projectName=$PROJECT_NAME -Dsonar.projectVersion=\`echo $RESOLVED_SOURCE_VERSION | cut -c1-7\` -Dsonar.branch.name=mainline -Dsonar.host.url=$SONARQUBE_ENDPOINT -Dsonar.cfn.nag.reportFiles=reports/cfn-nag-report.json -Dsonar.dependencyCheck.htmlReportPath=reports/dependency-check-report.html -Dsonar.javascript.lcov.reportPaths=**/coverage/lcov.info -Dsonar.clover.reportPath=**/coverage/clover.xml -Dsonar.exclusions=\\\\\\"**/reports/**,**/coverage/**\\\\\\" -Dsonar.sources=.\\",
        \\"curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf_issues_breakdown?resource=$PROJECT_NAME&branch=mainline\\\\\\" --output reports/prototype-issues-report.pdf\\",
        \\"curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/bitegarden/report/pdf?resource=$PROJECT_NAME&branch=mainline\\\\\\" --output reports/prototype-executive-report.pdf\\",
        \\"curl -X GET -u $SONARQUBE_TOKEN: \\\\\\"$SONARQUBE_ENDPOINT/api/security_reports/download?project=$PROJECT_NAME\\\\\\" --output reports/prototype-security-report.pdf\\"
      ]
    }
  }
}",
          "Type": "NO_SOURCE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsSonarCodeScannerValidationProjectRole6AF1A9E5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsSonarCodeScannerValidationProjectRoleDefaultPolicyF147A45E": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<.*SonarCodeScannerValidationProject.*>:\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<.*SonarCodeScannerValidationProject.*>-\\\\*$/g",
                },
                Object {
                  "regex": "/^Action::s3:GetObject\\\\*$/g",
                },
                Object {
                  "regex": "/^Resource::<ArtifactsBucket.*.Arn>/\\\\*\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Validation CodeBuild project requires access to the ArtifactsBucket and ability to create logs.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DefaultsSonarCodeScannerSonarQubeTokenD1898305",
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "DefaultsSonarCodeScannerValidationProjectFAE7BAD0",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "codebuild:BatchGetBuilds",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DefaultsCodePipelineBuildSynthCdkBuildProject81772484",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/**",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsSonarCodeScannerValidationProjectRoleDefaultPolicyF147A45E",
        "Roles": Array [
          Object {
            "Ref": "DefaultsSonarCodeScannerValidationProjectRole6AF1A9E5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DefaultsUpdatePipelineSelfMutationD1F1D812": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "DefaultsUpdatePipelineSelfMutationRole0C19159A",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk -a . deploy Default --require-approval=never --verbose\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DefaultsUpdatePipelineSelfMutationRole0C19159A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "mainline",
          },
          Object {
            "Key": "RepoName",
            "Value": "Defaults",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DefaultsUpdatePipelineSelfMutationRoleDefaultPolicyCE04D82F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "DefaultsUpdatePipelineSelfMutationD1F1D812",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DefaultsArtifactsBucket267E29E1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DefaultsArtifactsBucket267E29E1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DefaultsUpdatePipelineSelfMutationRoleDefaultPolicyCE04D82F",
        "Roles": Array [
          Object {
            "Ref": "DefaultsUpdatePipelineSelfMutationRole0C19159A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests Feature Branches - feature/new-feature_branch - using AwsPrototyping NagPack 1`] = `
Object {
  "Outputs": Object {
    "featurenewfeaturebranchFeatureBranchesCodeRepositoryGRCUrl47F29C59": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "codecommit::",
            Object {
              "Ref": "AWS::Region",
            },
            "://FeatureBranches",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CodeRepositoryfeaturenewfeaturebranchFeatureBranchesCodePipeline8DEDC297featurenewfeaturebranchEventRuleC60909CC": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "feature/new-feature_branch",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codecommit:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":FeatureBranches",
                ],
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  Object {
                    "Ref": "featurenewfeaturebranchFeatureBranchesCodePipeline1B736A77",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "featurenewfeaturebranchFeatureBranchesCodePipelineEventsRole66EF5150",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "featurenewfeaturebranchFeatureBranchesAccessLogsBucketAutoDeleteObjectsCustomResourceD5422663": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "featurenewfeaturebranchFeatureBranchesAccessLogsBucketPolicy6CC3B274",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "featurenewfeaturebranchFeatureBranchesAccessLogsBucketPolicy6CC3B274": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "ArnLike": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "featurenewfeaturebranchFeatureBranchesArtifactsBucketAutoDeleteObjectsCustomResource676F453C": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "featurenewfeaturebranchFeatureBranchesArtifactsBucketPolicyE9AA1518",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "featurenewfeaturebranchFeatureBranchesArtifactsBucketPolicyE9AA1518": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "featurenewfeaturebranchFeatureBranchesAssetsFileAsset1BAAF74C5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "featurenewfeaturebranchFeatureBranchesAssetsFileRole0732610A",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-feature-new-feature-branch-Stage/featurenewfeaturebranchStageAppStack9BC96CAD.assets.json\\\\\\" --verbose publish \\\\\\"43559360d7c264e7c786aba128df39186007c2ca4d04d8bcac25f871d521ed4a:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "featurenewfeaturebranchFeatureBranchesAssetsFileRole0732610A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesAssetsFileRoleDefaultPolicyF4DEAA77": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesAssetsFileRoleDefaultPolicyF4DEAA77",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesAssetsFileRole0732610A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "featurenewfeaturebranchFeatureBranchesCodeBuildActionRole003FB4DB": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "Bool": Object {
                  "aws:ViaAWSService": "codepipeline.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesCodeBuildActionRoleDefaultPolicy986C6D71": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectF14755B5",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutation637D36C5",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "featurenewfeaturebranchFeatureBranchesAssetsFileAsset1BAAF74C5",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesCodeBuildActionRoleDefaultPolicy986C6D71",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesCodeBuildActionRole003FB4DB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipeline1B736A77": Object {
      "DependsOn": Array [
        "featurenewfeaturebranchFeatureBranchesCodePipelineRoleDefaultPolicy7E1D880B",
        "featurenewfeaturebranchFeatureBranchesCodePipelineRoleC185E2E1",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
          },
          "Type": "S3",
        },
        "RestartExecutionOnUpdate": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "featurenewfeaturebranchFeatureBranchesCodePipelineRoleC185E2E1",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "feature/new-feature_branch",
                  "PollForSourceChanges": false,
                  "RepositoryName": "FeatureBranches",
                },
                "Name": "FeatureBranches",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "FeatureBranches_Source",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesCodePipelineSourceFeatureBranchesCodePipelineActionRole513AECAC",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"7bf3917a8bbdb63d144a12066dfcb5d5ec707592fcca5d3671715100cd08d871\\"}]",
                  "ProjectName": Object {
                    "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectF14755B5",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "FeatureBranches_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                  Object {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesCodeBuildActionRole003FB4DB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"e437283b833a76d1459ba3b9b11f0bf0f0c58fc4c9c6a130298f52e21508b79e\\"}]",
                  "ProjectName": Object {
                    "Ref": "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutation637D36C5",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesCodeBuildActionRole003FB4DB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "featurenewfeaturebranchFeatureBranchesAssetsFileAsset1BAAF74C5",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesCodeBuildActionRole003FB4DB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        Object {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "feature-new-feature-branch-Stage-AppStack",
                  "TemplateConfiguration": "Synth_Output::assembly-feature-new-feature-branch-Stage/featurenewfeaturebranchStageAppStack9BC96CAD.template.json.config.json",
                  "TemplatePath": "Synth_Output::assembly-feature-new-feature-branch-Stage/featurenewfeaturebranchStageAppStack9BC96CAD.template.json",
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "feature-new-feature-branch-Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "feature-new-feature-branch-Stage",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectF14755B5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "BRANCH",
              "Type": "PLAINTEXT",
              "Value": "feature/new-feature_branch",
            },
          ],
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole64A47476",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"npx nx run-many --target=build --all\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"secondary-artifacts\\": {
      \\"Synth_Output\\": {
        \\"base-directory\\": \\"cdk.out\\",
        \\"files\\": \\"**/*\\"
      },
      \\"Synth__\\": {
        \\"base-directory\\": \\".\\",
        \\"files\\": \\"**/*\\"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole64A47476": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy9BFFDEBB": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectF14755B5",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectF14755B5",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectF14755B5",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy9BFFDEBB",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole64A47476",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineEventsRole66EF5150": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineEventsRoleDefaultPolicyAC70ADDB": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "featurenewfeaturebranchFeatureBranchesCodePipeline1B736A77",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesCodePipelineEventsRoleDefaultPolicyAC70ADDB",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineEventsRole66EF5150",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineRoleC185E2E1": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineRoleDefaultPolicy7E1D880B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "featurenewfeaturebranchFeatureBranchesCodePipelineSourceFeatureBranchesCodePipelineActionRole513AECAC",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "featurenewfeaturebranchFeatureBranchesCodeBuildActionRole003FB4DB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    Object {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesCodePipelineRoleDefaultPolicy7E1D880B",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineRoleC185E2E1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineSourceFeatureBranchesCodePipelineActionRole513AECAC": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineSourceFeatureBranchesCodePipelineActionRoleDefaultPolicy5E4D4EC6": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codecommit:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":FeatureBranches",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesCodePipelineSourceFeatureBranchesCodePipelineActionRoleDefaultPolicy5E4D4EC6",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineSourceFeatureBranchesCodePipelineActionRole513AECAC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutation637D36C5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutationRole19AEAC1E",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk -a . deploy Default --require-approval=never --verbose\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutationRole19AEAC1E": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicyC0E09F45": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutation637D36C5",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutation637D36C5",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutation637D36C5",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicyC0E09F45",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutationRole19AEAC1E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests Feature Branches - feature/new-feature_branch 1`] = `
Object {
  "Outputs": Object {
    "featurenewfeaturebranchFeatureBranchesCodeRepositoryGRCUrl47F29C59": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "codecommit::",
            Object {
              "Ref": "AWS::Region",
            },
            "://FeatureBranches",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CodeRepositoryfeaturenewfeaturebranchFeatureBranchesCodePipeline8DEDC297featurenewfeaturebranchEventRuleC60909CC": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "feature/new-feature_branch",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codecommit:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":FeatureBranches",
                ],
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  Object {
                    "Ref": "featurenewfeaturebranchFeatureBranchesCodePipeline1B736A77",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "featurenewfeaturebranchFeatureBranchesCodePipelineEventsRole66EF5150",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "featurenewfeaturebranchFeatureBranchesAccessLogsBucketAutoDeleteObjectsCustomResourceD5422663": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "featurenewfeaturebranchFeatureBranchesAccessLogsBucketPolicy6CC3B274",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "featurenewfeaturebranchFeatureBranchesAccessLogsBucketPolicy6CC3B274": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "ArnLike": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "featurenewfeaturebranchFeatureBranchesArtifactsBucketAutoDeleteObjectsCustomResource676F453C": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "featurenewfeaturebranchFeatureBranchesArtifactsBucketPolicyE9AA1518",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesAccessLogsBucketA63A7172",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "featurenewfeaturebranchFeatureBranchesArtifactsBucketPolicyE9AA1518": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "featurenewfeaturebranchFeatureBranchesAssetsFileAsset1BAAF74C5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "featurenewfeaturebranchFeatureBranchesAssetsFileRole0732610A",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-feature-new-feature-branch-Stage/featurenewfeaturebranchStageAppStack9BC96CAD.assets.json\\\\\\" --verbose publish \\\\\\"43559360d7c264e7c786aba128df39186007c2ca4d04d8bcac25f871d521ed4a:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "featurenewfeaturebranchFeatureBranchesAssetsFileRole0732610A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesAssetsFileRoleDefaultPolicyF4DEAA77": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesAssetsFileRoleDefaultPolicyF4DEAA77",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesAssetsFileRole0732610A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "featurenewfeaturebranchFeatureBranchesCodeBuildActionRole003FB4DB": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "Bool": Object {
                  "aws:ViaAWSService": "codepipeline.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesCodeBuildActionRoleDefaultPolicy986C6D71": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectF14755B5",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutation637D36C5",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "featurenewfeaturebranchFeatureBranchesAssetsFileAsset1BAAF74C5",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesCodeBuildActionRoleDefaultPolicy986C6D71",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesCodeBuildActionRole003FB4DB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipeline1B736A77": Object {
      "DependsOn": Array [
        "featurenewfeaturebranchFeatureBranchesCodePipelineRoleDefaultPolicy7E1D880B",
        "featurenewfeaturebranchFeatureBranchesCodePipelineRoleC185E2E1",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
          },
          "Type": "S3",
        },
        "RestartExecutionOnUpdate": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "featurenewfeaturebranchFeatureBranchesCodePipelineRoleC185E2E1",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "feature/new-feature_branch",
                  "PollForSourceChanges": false,
                  "RepositoryName": "FeatureBranches",
                },
                "Name": "FeatureBranches",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "FeatureBranches_Source",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesCodePipelineSourceFeatureBranchesCodePipelineActionRole513AECAC",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"7bf3917a8bbdb63d144a12066dfcb5d5ec707592fcca5d3671715100cd08d871\\"}]",
                  "ProjectName": Object {
                    "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectF14755B5",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "FeatureBranches_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                  Object {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesCodeBuildActionRole003FB4DB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"e437283b833a76d1459ba3b9b11f0bf0f0c58fc4c9c6a130298f52e21508b79e\\"}]",
                  "ProjectName": Object {
                    "Ref": "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutation637D36C5",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesCodeBuildActionRole003FB4DB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "featurenewfeaturebranchFeatureBranchesAssetsFileAsset1BAAF74C5",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesCodeBuildActionRole003FB4DB",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        Object {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "feature-new-feature-branch-Stage-AppStack",
                  "TemplateConfiguration": "Synth_Output::assembly-feature-new-feature-branch-Stage/featurenewfeaturebranchStageAppStack9BC96CAD.template.json.config.json",
                  "TemplatePath": "Synth_Output::assembly-feature-new-feature-branch-Stage/featurenewfeaturebranchStageAppStack9BC96CAD.template.json",
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "feature-new-feature-branch-Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "feature-new-feature-branch-Stage",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectF14755B5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "BRANCH",
              "Type": "PLAINTEXT",
              "Value": "feature/new-feature_branch",
            },
          ],
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole64A47476",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"npx nx run-many --target=build --all\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"secondary-artifacts\\": {
      \\"Synth_Output\\": {
        \\"base-directory\\": \\"cdk.out\\",
        \\"files\\": \\"**/*\\"
      },
      \\"Synth__\\": {
        \\"base-directory\\": \\".\\",
        \\"files\\": \\"**/*\\"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole64A47476": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy9BFFDEBB": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectF14755B5",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectF14755B5",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectF14755B5",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy9BFFDEBB",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole64A47476",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineEventsRole66EF5150": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineEventsRoleDefaultPolicyAC70ADDB": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "featurenewfeaturebranchFeatureBranchesCodePipeline1B736A77",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesCodePipelineEventsRoleDefaultPolicyAC70ADDB",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineEventsRole66EF5150",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineRoleC185E2E1": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineRoleDefaultPolicy7E1D880B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "featurenewfeaturebranchFeatureBranchesCodePipelineSourceFeatureBranchesCodePipelineActionRole513AECAC",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "featurenewfeaturebranchFeatureBranchesCodeBuildActionRole003FB4DB",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    Object {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesCodePipelineRoleDefaultPolicy7E1D880B",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineRoleC185E2E1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineSourceFeatureBranchesCodePipelineActionRole513AECAC": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesCodePipelineSourceFeatureBranchesCodePipelineActionRoleDefaultPolicy5E4D4EC6": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codecommit:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":FeatureBranches",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesCodePipelineSourceFeatureBranchesCodePipelineActionRoleDefaultPolicy5E4D4EC6",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesCodePipelineSourceFeatureBranchesCodePipelineActionRole513AECAC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutation637D36C5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutationRole19AEAC1E",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk -a . deploy Default --require-approval=never --verbose\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutationRole19AEAC1E": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "FeatureBranch",
            "Value": "feature/new-feature_branch",
          },
          Object {
            "Key": "RepoName",
            "Value": "FeatureBranches",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicyC0E09F45": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutation637D36C5",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutation637D36C5",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutation637D36C5",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "featurenewfeaturebranchFeatureBranchesArtifactsBucketC4C9DA46",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicyC0E09F45",
        "Roles": Array [
          Object {
            "Ref": "featurenewfeaturebranchFeatureBranchesUpdatePipelineSelfMutationRole19AEAC1E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests Feature Branches - mainline - using AwsPrototyping NagPack 1`] = `
Object {
  "Outputs": Object {
    "FeatureBranchesCodeRepositoryGRCUrlA78583F8": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "codecommit::",
            Object {
              "Ref": "AWS::Region",
            },
            "://",
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Name",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "FeatureBranchesAccessLogsBucket26F49982",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesAccessLogsBucket26F49982": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesAccessLogsBucketAutoDeleteObjectsCustomResourceCE3362D5": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "FeatureBranchesAccessLogsBucketPolicy10128DEF",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "FeatureBranchesAccessLogsBucket26F49982",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesAccessLogsBucketPolicy10128DEF": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "FeatureBranchesAccessLogsBucket26F49982",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesAccessLogsBucket26F49982",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesAccessLogsBucket26F49982",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesAccessLogsBucket26F49982",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesAccessLogsBucket26F49982",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "ArnLike": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "FeatureBranchesArtifactsBucketAE5F1C21",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "FeatureBranchesAccessLogsBucket26F49982",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FeatureBranchesArtifactsBucketAE5F1C21": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "FeatureBranchesAccessLogsBucket26F49982",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesArtifactsBucketAutoDeleteObjectsCustomResource54C6B193": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "FeatureBranchesArtifactsBucketPolicyBF161175",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesArtifactsBucketPolicyBF161175": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FeatureBranchesAssetsFileAsset1F7F9D557": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesAssetsFileRoleCD61D8A8",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-Stage/StageAppStack7618C9EF.assets.json\\\\\\" --verbose publish \\\\\\"43559360d7c264e7c786aba128df39186007c2ca4d04d8bcac25f871d521ed4a:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesAssetsFileRoleCD61D8A8": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesAssetsFileRoleDefaultPolicy3527F238": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesAssetsFileRoleDefaultPolicy3527F238",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesAssetsFileRoleCD61D8A8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodeBuildActionRole5632928F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "Bool": Object {
                  "aws:ViaAWSService": "codepipeline.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeBuildActionRoleDefaultPolicy6F2B9AF0": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesAssetsFileAsset1F7F9D557",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodeBuildActionRoleDefaultPolicy6F2B9AF0",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodeBuildActionRole5632928F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "BRANCH",
              "Type": "PLAINTEXT",
              "Value": "mainline",
            },
          ],
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"npx nx run-many --target=build --all\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"secondary-artifacts\\": {
      \\"Synth_Output\\": {
        \\"base-directory\\": \\"cdk.out\\",
        \\"files\\": \\"**/*\\"
      },
      \\"Synth__\\": {
        \\"base-directory\\": \\".\\",
        \\"files\\": \\"**/*\\"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2A0E55F5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2A0E55F5",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineEC802A1B": Object {
      "DependsOn": Array [
        "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7",
        "FeatureBranchesCodePipelineRole25A9A50B",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
          },
          "Type": "S3",
        },
        "RestartExecutionOnUpdate": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodePipelineRole25A9A50B",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "mainline",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::GetAtt": Array [
                      "FeatureBranchesCodeRepositoryD5ABDB8F",
                      "Name",
                    ],
                  },
                },
                "Name": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeRepositoryD5ABDB8F",
                    "Name",
                  ],
                },
                "OutputArtifacts": Array [
                  Object {
                    "Name": "c8c8089eecde98d03bd22313f7aea14e30445074f9_Source",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"7cb930276e2c624899dadc5cd557500f267ff825956ffae5529d532ebc7f659d\\"}]",
                  "ProjectName": Object {
                    "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "c8c8089eecde98d03bd22313f7aea14e30445074f9_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                  Object {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"e437283b833a76d1459ba3b9b11f0bf0f0c58fc4c9c6a130298f52e21508b79e\\"}]",
                  "ProjectName": Object {
                    "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "FeatureBranchesAssetsFileAsset1F7F9D557",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        Object {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "FeatureBranchesCodePipelineEventsRole25B14D6E": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineEventsRoleDefaultPolicy120BFB25": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "FeatureBranchesCodePipelineEC802A1B",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineEventsRoleDefaultPolicy120BFB25",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineEventsRole25B14D6E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineRole25A9A50B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodeBuildActionRole5632928F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    Object {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineRole25A9A50B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyBD26FC43": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodeRepositoryD5ABDB8F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyBD26FC43",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeRepositoryBranchCreateTrigger0DFB7CE7": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "AWS CodeCommit reference created event.",
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
            ],
            "referenceName": Array [
              Object {
                "prefix": "",
              },
            ],
            "referenceType": Array [
              "branch",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch322D891A",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FeatureBranchesCodeRepositoryBranchCreateTriggerAllowEventRuleFeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch6324E6DC16417AC9": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch322D891A",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodeRepositoryBranchCreateTrigger0DFB7CE7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "FeatureBranchesCodeRepositoryBranchDestroyTrigger71719207": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "AWS CodeCommit reference deleted event.",
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceDeleted",
            ],
            "referenceName": Array [
              Object {
                "prefix": "",
              },
            ],
            "referenceType": Array [
              "branch",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch73D260A3",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FeatureBranchesCodeRepositoryBranchDestroyTriggerAllowEventRuleFeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch9976B4E11308B9EB": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch73D260A3",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodeRepositoryBranchDestroyTrigger71719207",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "FeatureBranchesCodeRepositoryD5ABDB8F": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "RepositoryName": "FeatureBranches",
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "FeatureBranchesCodeRepositoryFeatureBranchesCodePipelineE4C72340mainlineEventRule3D893216": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "mainline",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  Object {
                    "Ref": "FeatureBranchesCodePipelineEC802A1B",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodePipelineEventsRole25B14D6E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Build project to deploy feature branch pipelines",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRole4447D4AD",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "version: \\"0.2\\"
phases:
  install:
    commands:
      - npm install -g aws-cdk
      - yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile
  build:
    commands:
      - npx nx run-many --target=build --all
      - \\"cd \\"
      - npx cdk synth
      - npx cdk deploy --require-approval=never
artifacts:
  files:
    - \\"**/*\\"
",
          "Location": Object {
            "Fn::GetAtt": Array [
              "FeatureBranchesCodeRepositoryD5ABDB8F",
              "CloneUrlHttp",
            ],
          },
          "Type": "CODECOMMIT",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRole4447D4AD": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRoleDefaultPolicyAD0C661D": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codecommit:GitPull",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodeRepositoryD5ABDB8F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRoleDefaultPolicyAD0C661D",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRole4447D4AD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch322D891A": Object {
      "DependsOn": Array [
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRoleDefaultPolicy2CC3795A",
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "3dffd1223abe6a9d3f28ac0373433ddb0be9a7d7a446b101dfa131cce1904ca6.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "CODEBUILD_PROJECT": Object {
              "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
            },
            "MAIN_BRANCH": "mainline",
          },
        },
        "Handler": "create_branch.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRoleDefaultPolicy2CC3795A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRoleDefaultPolicy2CC3795A",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch73D260A3": Object {
      "DependsOn": Array [
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRoleDefaultPolicy273B724B",
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "f590c9801399fa0d9348b320971d85367d58bf736ce2a832b8eddce2a34501a5.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "MAIN_BRANCH": "mainline",
            "REPO_NAME": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Name",
              ],
            },
          },
        },
        "Handler": "destroy_branch.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRoleDefaultPolicy273B724B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudformation:DeleteStack",
              "Condition": Object {
                "ForAllValues:StringEquals": Object {
                  "aws:TagKeys": Array [
                    "FeatureBranch",
                    "RepoName",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":cloudformation:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stack/*/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "tag:GetResources",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRoleDefaultPolicy273B724B",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesUpdatePipelineSelfMutation0C4FE793": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesUpdatePipelineSelfMutationRole9669379F",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk -a . deploy Default --require-approval=never --verbose\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesUpdatePipelineSelfMutationRole9669379F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicy2C1692D4": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicy2C1692D4",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesUpdatePipelineSelfMutationRole9669379F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests Feature Branches - mainline 1`] = `
Object {
  "Outputs": Object {
    "FeatureBranchesCodeRepositoryGRCUrlA78583F8": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "codecommit::",
            Object {
              "Ref": "AWS::Region",
            },
            "://",
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Name",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "FeatureBranchesAccessLogsBucket26F49982",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesAccessLogsBucket26F49982": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesAccessLogsBucketAutoDeleteObjectsCustomResourceCE3362D5": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "FeatureBranchesAccessLogsBucketPolicy10128DEF",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "FeatureBranchesAccessLogsBucket26F49982",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesAccessLogsBucketPolicy10128DEF": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "FeatureBranchesAccessLogsBucket26F49982",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesAccessLogsBucket26F49982",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesAccessLogsBucket26F49982",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesAccessLogsBucket26F49982",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesAccessLogsBucket26F49982",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "ArnLike": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "FeatureBranchesArtifactsBucketAE5F1C21",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "FeatureBranchesAccessLogsBucket26F49982",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FeatureBranchesArtifactsBucketAE5F1C21": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "FeatureBranchesAccessLogsBucket26F49982",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesArtifactsBucketAutoDeleteObjectsCustomResource54C6B193": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "FeatureBranchesArtifactsBucketPolicyBF161175",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesArtifactsBucketPolicyBF161175": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FeatureBranchesAssetsFileAsset1F7F9D557": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesAssetsFileRoleCD61D8A8",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-Stage/StageAppStack7618C9EF.assets.json\\\\\\" --verbose publish \\\\\\"43559360d7c264e7c786aba128df39186007c2ca4d04d8bcac25f871d521ed4a:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesAssetsFileRoleCD61D8A8": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesAssetsFileRoleDefaultPolicy3527F238": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesAssetsFileRoleDefaultPolicy3527F238",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesAssetsFileRoleCD61D8A8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodeBuildActionRole5632928F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "Bool": Object {
                  "aws:ViaAWSService": "codepipeline.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeBuildActionRoleDefaultPolicy6F2B9AF0": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesAssetsFileAsset1F7F9D557",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodeBuildActionRoleDefaultPolicy6F2B9AF0",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodeBuildActionRole5632928F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "BRANCH",
              "Type": "PLAINTEXT",
              "Value": "mainline",
            },
          ],
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"npx nx run-many --target=build --all\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"secondary-artifacts\\": {
      \\"Synth_Output\\": {
        \\"base-directory\\": \\"cdk.out\\",
        \\"files\\": \\"**/*\\"
      },
      \\"Synth__\\": {
        \\"base-directory\\": \\".\\",
        \\"files\\": \\"**/*\\"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2A0E55F5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2A0E55F5",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineEC802A1B": Object {
      "DependsOn": Array [
        "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7",
        "FeatureBranchesCodePipelineRole25A9A50B",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
          },
          "Type": "S3",
        },
        "RestartExecutionOnUpdate": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodePipelineRole25A9A50B",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "mainline",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::GetAtt": Array [
                      "FeatureBranchesCodeRepositoryD5ABDB8F",
                      "Name",
                    ],
                  },
                },
                "Name": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeRepositoryD5ABDB8F",
                    "Name",
                  ],
                },
                "OutputArtifacts": Array [
                  Object {
                    "Name": "c8c8089eecde98d03bd22313f7aea14e30445074f9_Source",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"7cb930276e2c624899dadc5cd557500f267ff825956ffae5529d532ebc7f659d\\"}]",
                  "ProjectName": Object {
                    "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "c8c8089eecde98d03bd22313f7aea14e30445074f9_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                  Object {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"e437283b833a76d1459ba3b9b11f0bf0f0c58fc4c9c6a130298f52e21508b79e\\"}]",
                  "ProjectName": Object {
                    "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "FeatureBranchesAssetsFileAsset1F7F9D557",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        Object {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "FeatureBranchesCodePipelineEventsRole25B14D6E": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineEventsRoleDefaultPolicy120BFB25": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "FeatureBranchesCodePipelineEC802A1B",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineEventsRoleDefaultPolicy120BFB25",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineEventsRole25B14D6E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineRole25A9A50B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodeBuildActionRole5632928F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    Object {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineRole25A9A50B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyBD26FC43": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodeRepositoryD5ABDB8F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyBD26FC43",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeRepositoryBranchCreateTrigger0DFB7CE7": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "AWS CodeCommit reference created event.",
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
            ],
            "referenceName": Array [
              Object {
                "prefix": "",
              },
            ],
            "referenceType": Array [
              "branch",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch322D891A",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FeatureBranchesCodeRepositoryBranchCreateTriggerAllowEventRuleFeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch6324E6DC16417AC9": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch322D891A",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodeRepositoryBranchCreateTrigger0DFB7CE7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "FeatureBranchesCodeRepositoryBranchDestroyTrigger71719207": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "AWS CodeCommit reference deleted event.",
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceDeleted",
            ],
            "referenceName": Array [
              Object {
                "prefix": "",
              },
            ],
            "referenceType": Array [
              "branch",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch73D260A3",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FeatureBranchesCodeRepositoryBranchDestroyTriggerAllowEventRuleFeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch9976B4E11308B9EB": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch73D260A3",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodeRepositoryBranchDestroyTrigger71719207",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "FeatureBranchesCodeRepositoryD5ABDB8F": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "RepositoryName": "FeatureBranches",
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "FeatureBranchesCodeRepositoryFeatureBranchesCodePipelineE4C72340mainlineEventRule3D893216": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "mainline",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  Object {
                    "Ref": "FeatureBranchesCodePipelineEC802A1B",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodePipelineEventsRole25B14D6E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Build project to deploy feature branch pipelines",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRole4447D4AD",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "version: \\"0.2\\"
phases:
  install:
    commands:
      - npm install -g aws-cdk
      - yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile
  build:
    commands:
      - npx nx run-many --target=build --all
      - \\"cd \\"
      - npx cdk synth
      - npx cdk deploy --require-approval=never
artifacts:
  files:
    - \\"**/*\\"
",
          "Location": Object {
            "Fn::GetAtt": Array [
              "FeatureBranchesCodeRepositoryD5ABDB8F",
              "CloneUrlHttp",
            ],
          },
          "Type": "CODECOMMIT",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRole4447D4AD": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRoleDefaultPolicyAD0C661D": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codecommit:GitPull",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodeRepositoryD5ABDB8F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRoleDefaultPolicyAD0C661D",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRole4447D4AD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch322D891A": Object {
      "DependsOn": Array [
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRoleDefaultPolicy2CC3795A",
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "3dffd1223abe6a9d3f28ac0373433ddb0be9a7d7a446b101dfa131cce1904ca6.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "CODEBUILD_PROJECT": Object {
              "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
            },
            "MAIN_BRANCH": "mainline",
          },
        },
        "Handler": "create_branch.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRoleDefaultPolicy2CC3795A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRoleDefaultPolicy2CC3795A",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch73D260A3": Object {
      "DependsOn": Array [
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRoleDefaultPolicy273B724B",
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "f590c9801399fa0d9348b320971d85367d58bf736ce2a832b8eddce2a34501a5.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "MAIN_BRANCH": "mainline",
            "REPO_NAME": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Name",
              ],
            },
          },
        },
        "Handler": "destroy_branch.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRoleDefaultPolicy273B724B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudformation:DeleteStack",
              "Condition": Object {
                "ForAllValues:StringEquals": Object {
                  "aws:TagKeys": Array [
                    "FeatureBranch",
                    "RepoName",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":cloudformation:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stack/*/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "tag:GetResources",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRoleDefaultPolicy273B724B",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesUpdatePipelineSelfMutation0C4FE793": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesUpdatePipelineSelfMutationRole9669379F",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk -a . deploy Default --require-approval=never --verbose\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesUpdatePipelineSelfMutationRole9669379F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicy2C1692D4": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicy2C1692D4",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesUpdatePipelineSelfMutationRole9669379F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests Feature Branches - using AwsPrototyping NagPack 1`] = `
Object {
  "Outputs": Object {
    "FeatureBranchesCodeRepositoryGRCUrlA78583F8": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "codecommit::",
            Object {
              "Ref": "AWS::Region",
            },
            "://",
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Name",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "FeatureBranchesAccessLogsBucket26F49982",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesAccessLogsBucket26F49982": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesAccessLogsBucketAutoDeleteObjectsCustomResourceCE3362D5": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "FeatureBranchesAccessLogsBucketPolicy10128DEF",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "FeatureBranchesAccessLogsBucket26F49982",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesAccessLogsBucketPolicy10128DEF": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "FeatureBranchesAccessLogsBucket26F49982",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesAccessLogsBucket26F49982",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesAccessLogsBucket26F49982",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesAccessLogsBucket26F49982",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesAccessLogsBucket26F49982",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "ArnLike": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "FeatureBranchesArtifactsBucketAE5F1C21",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "FeatureBranchesAccessLogsBucket26F49982",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FeatureBranchesArtifactsBucketAE5F1C21": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "FeatureBranchesAccessLogsBucket26F49982",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesArtifactsBucketAutoDeleteObjectsCustomResource54C6B193": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "FeatureBranchesArtifactsBucketPolicyBF161175",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesArtifactsBucketPolicyBF161175": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FeatureBranchesAssetsFileAsset1F7F9D557": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesAssetsFileRoleCD61D8A8",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-Stage/StageAppStack7618C9EF.assets.json\\\\\\" --verbose publish \\\\\\"43559360d7c264e7c786aba128df39186007c2ca4d04d8bcac25f871d521ed4a:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesAssetsFileRoleCD61D8A8": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesAssetsFileRoleDefaultPolicy3527F238": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesAssetsFileRoleDefaultPolicy3527F238",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesAssetsFileRoleCD61D8A8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodeBuildActionRole5632928F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "Bool": Object {
                  "aws:ViaAWSService": "codepipeline.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeBuildActionRoleDefaultPolicy6F2B9AF0": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesAssetsFileAsset1F7F9D557",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodeBuildActionRoleDefaultPolicy6F2B9AF0",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodeBuildActionRole5632928F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "BRANCH",
              "Type": "PLAINTEXT",
              "Value": "mainline",
            },
          ],
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"npx nx run-many --target=build --all\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"secondary-artifacts\\": {
      \\"Synth_Output\\": {
        \\"base-directory\\": \\"cdk.out\\",
        \\"files\\": \\"**/*\\"
      },
      \\"Synth__\\": {
        \\"base-directory\\": \\".\\",
        \\"files\\": \\"**/*\\"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2A0E55F5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2A0E55F5",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineEC802A1B": Object {
      "DependsOn": Array [
        "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7",
        "FeatureBranchesCodePipelineRole25A9A50B",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
          },
          "Type": "S3",
        },
        "RestartExecutionOnUpdate": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodePipelineRole25A9A50B",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "mainline",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::GetAtt": Array [
                      "FeatureBranchesCodeRepositoryD5ABDB8F",
                      "Name",
                    ],
                  },
                },
                "Name": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeRepositoryD5ABDB8F",
                    "Name",
                  ],
                },
                "OutputArtifacts": Array [
                  Object {
                    "Name": "c8c8089eecde98d03bd22313f7aea14e30445074f9_Source",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"7cb930276e2c624899dadc5cd557500f267ff825956ffae5529d532ebc7f659d\\"}]",
                  "ProjectName": Object {
                    "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "c8c8089eecde98d03bd22313f7aea14e30445074f9_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                  Object {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"e437283b833a76d1459ba3b9b11f0bf0f0c58fc4c9c6a130298f52e21508b79e\\"}]",
                  "ProjectName": Object {
                    "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "FeatureBranchesAssetsFileAsset1F7F9D557",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        Object {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "FeatureBranchesCodePipelineEventsRole25B14D6E": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineEventsRoleDefaultPolicy120BFB25": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "FeatureBranchesCodePipelineEC802A1B",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineEventsRoleDefaultPolicy120BFB25",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineEventsRole25B14D6E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineRole25A9A50B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodeBuildActionRole5632928F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    Object {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineRole25A9A50B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyBD26FC43": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodeRepositoryD5ABDB8F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyBD26FC43",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeRepositoryBranchCreateTrigger0DFB7CE7": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "AWS CodeCommit reference created event.",
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
            ],
            "referenceName": Array [
              Object {
                "prefix": "",
              },
            ],
            "referenceType": Array [
              "branch",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch322D891A",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FeatureBranchesCodeRepositoryBranchCreateTriggerAllowEventRuleFeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch6324E6DC16417AC9": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch322D891A",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodeRepositoryBranchCreateTrigger0DFB7CE7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "FeatureBranchesCodeRepositoryBranchDestroyTrigger71719207": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "AWS CodeCommit reference deleted event.",
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceDeleted",
            ],
            "referenceName": Array [
              Object {
                "prefix": "",
              },
            ],
            "referenceType": Array [
              "branch",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch73D260A3",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FeatureBranchesCodeRepositoryBranchDestroyTriggerAllowEventRuleFeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch9976B4E11308B9EB": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch73D260A3",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodeRepositoryBranchDestroyTrigger71719207",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "FeatureBranchesCodeRepositoryD5ABDB8F": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "RepositoryName": "FeatureBranches",
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "FeatureBranchesCodeRepositoryFeatureBranchesCodePipelineE4C72340mainlineEventRule3D893216": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "mainline",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  Object {
                    "Ref": "FeatureBranchesCodePipelineEC802A1B",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodePipelineEventsRole25B14D6E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Build project to deploy feature branch pipelines",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRole4447D4AD",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "version: \\"0.2\\"
phases:
  install:
    commands:
      - npm install -g aws-cdk
      - yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile
  build:
    commands:
      - npx nx run-many --target=build --all
      - \\"cd \\"
      - npx cdk synth
      - npx cdk deploy --require-approval=never
artifacts:
  files:
    - \\"**/*\\"
",
          "Location": Object {
            "Fn::GetAtt": Array [
              "FeatureBranchesCodeRepositoryD5ABDB8F",
              "CloneUrlHttp",
            ],
          },
          "Type": "CODECOMMIT",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRole4447D4AD": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRoleDefaultPolicyAD0C661D": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codecommit:GitPull",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodeRepositoryD5ABDB8F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRoleDefaultPolicyAD0C661D",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRole4447D4AD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch322D891A": Object {
      "DependsOn": Array [
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRoleDefaultPolicy2CC3795A",
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "3dffd1223abe6a9d3f28ac0373433ddb0be9a7d7a446b101dfa131cce1904ca6.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "CODEBUILD_PROJECT": Object {
              "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
            },
            "MAIN_BRANCH": "mainline",
          },
        },
        "Handler": "create_branch.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRoleDefaultPolicy2CC3795A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRoleDefaultPolicy2CC3795A",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch73D260A3": Object {
      "DependsOn": Array [
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRoleDefaultPolicy273B724B",
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "f590c9801399fa0d9348b320971d85367d58bf736ce2a832b8eddce2a34501a5.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "MAIN_BRANCH": "mainline",
            "REPO_NAME": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Name",
              ],
            },
          },
        },
        "Handler": "destroy_branch.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRoleDefaultPolicy273B724B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudformation:DeleteStack",
              "Condition": Object {
                "ForAllValues:StringEquals": Object {
                  "aws:TagKeys": Array [
                    "FeatureBranch",
                    "RepoName",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":cloudformation:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stack/*/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "tag:GetResources",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRoleDefaultPolicy273B724B",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesUpdatePipelineSelfMutation0C4FE793": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesUpdatePipelineSelfMutationRole9669379F",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk -a . deploy Default --require-approval=never --verbose\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesUpdatePipelineSelfMutationRole9669379F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicy2C1692D4": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicy2C1692D4",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesUpdatePipelineSelfMutationRole9669379F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PDK Pipeline Unit Tests Feature Branches 1`] = `
Object {
  "Outputs": Object {
    "FeatureBranchesCodeRepositoryGRCUrlA78583F8": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "codecommit::",
            Object {
              "Ref": "AWS::Region",
            },
            "://",
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Name",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "FeatureBranchesAccessLogsBucket26F49982",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesAccessLogsBucket26F49982": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesAccessLogsBucketAutoDeleteObjectsCustomResourceCE3362D5": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "FeatureBranchesAccessLogsBucketPolicy10128DEF",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "FeatureBranchesAccessLogsBucket26F49982",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesAccessLogsBucketPolicy10128DEF": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "FeatureBranchesAccessLogsBucket26F49982",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesAccessLogsBucket26F49982",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesAccessLogsBucket26F49982",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesAccessLogsBucket26F49982",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesAccessLogsBucket26F49982",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "ArnLike": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "FeatureBranchesArtifactsBucketAE5F1C21",
                      "Arn",
                    ],
                  },
                },
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "FeatureBranchesAccessLogsBucket26F49982",
                        "Arn",
                      ],
                    },
                    "/access-logs*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FeatureBranchesArtifactsBucketAE5F1C21": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "FeatureBranchesAccessLogsBucket26F49982",
          },
          "LogFilePrefix": "access-logs",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesArtifactsBucketAutoDeleteObjectsCustomResource54C6B193": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "FeatureBranchesArtifactsBucketPolicyBF161175",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketName": Object {
          "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FeatureBranchesArtifactsBucketPolicyBF161175": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FeatureBranchesAssetsFileAsset1F7F9D557": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Assets/FileAsset1",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesAssetsFileRoleCD61D8A8",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g cdk-assets@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk-assets --path \\\\\\"assembly-Stage/StageAppStack7618C9EF.assets.json\\\\\\" --verbose publish \\\\\\"43559360d7c264e7c786aba128df39186007c2ca4d04d8bcac25f871d521ed4a:current_account-current_region\\\\\\"\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesAssetsFileRoleCD61D8A8": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesAssetsFileRoleDefaultPolicy3527F238": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/codebuild/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Sub": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesAssetsFileRoleDefaultPolicy3527F238",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesAssetsFileRoleCD61D8A8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodeBuildActionRole5632928F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "Bool": Object {
                  "aws:ViaAWSService": "codepipeline.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeBuildActionRoleDefaultPolicy6F2B9AF0": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesAssetsFileAsset1F7F9D557",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodeBuildActionRoleDefaultPolicy6F2B9AF0",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodeBuildActionRole5632928F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "BRANCH",
              "Type": "PLAINTEXT",
              "Value": "mainline",
            },
          ],
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk\\",
        \\"yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"npx nx run-many --target=build --all\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"secondary-artifacts\\": {
      \\"Synth_Output\\": {
        \\"base-directory\\": \\"cdk.out\\",
        \\"files\\": \\"**/*\\"
      },
      \\"Synth__\\": {
        \\"base-directory\\": \\".\\",
        \\"files\\": \\"**/*\\"
      }
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2A0E55F5": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2A0E55F5",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProjectRole63DBFA18",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineEC802A1B": Object {
      "DependsOn": Array [
        "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7",
        "FeatureBranchesCodePipelineRole25A9A50B",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "FeatureBranchesArtifactsBucketAE5F1C21",
          },
          "Type": "S3",
        },
        "RestartExecutionOnUpdate": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodePipelineRole25A9A50B",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "mainline",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::GetAtt": Array [
                      "FeatureBranchesCodeRepositoryD5ABDB8F",
                      "Name",
                    ],
                  },
                },
                "Name": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeRepositoryD5ABDB8F",
                    "Name",
                  ],
                },
                "OutputArtifacts": Array [
                  Object {
                    "Name": "c8c8089eecde98d03bd22313f7aea14e30445074f9_Source",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"7cb930276e2c624899dadc5cd557500f267ff825956ffae5529d532ebc7f659d\\"}]",
                  "ProjectName": Object {
                    "Ref": "FeatureBranchesCodePipelineBuildSynthCdkBuildProject09632D29",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "c8c8089eecde98d03bd22313f7aea14e30445074f9_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                  Object {
                    "Name": "Synth__",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"e437283b833a76d1459ba3b9b11f0bf0f0c58fc4c9c6a130298f52e21508b79e\\"}]",
                  "ProjectName": Object {
                    "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "FeatureBranchesAssetsFileAsset1F7F9D557",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "FileAsset1",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesCodeBuildActionRole5632928F",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Assets",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "ChangeSetName": "PipelineChange",
                  "RoleArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        "-",
                        Object {
                          "Ref": "AWS::Region",
                        },
                      ],
                    ],
                  },
                  "StackName": "Stage-AppStack",
                  "TemplatePath": "Synth_Output::assembly-Stage/StageAppStack7618C9EF.template.json",
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "Prepare",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange",
                  "StackName": "Stage-AppStack",
                },
                "Name": "Deploy",
                "RoleArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      "-",
                      Object {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "Stage",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "FeatureBranchesCodePipelineEventsRole25B14D6E": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineEventsRoleDefaultPolicy120BFB25": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "FeatureBranchesCodePipelineEC802A1B",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineEventsRoleDefaultPolicy120BFB25",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineEventsRole25B14D6E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineRole25A9A50B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodeBuildActionRole5632928F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "-",
                    Object {
                      "Ref": "AWS::Region",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineRoleDefaultPolicy02B3A9F7",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineRole25A9A50B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyBD26FC43": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodeRepositoryD5ABDB8F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyBD26FC43",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesCodePipelineSourceCodeCommitCodePipelineActionRoleE3F1E37D": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesCodeRepositoryBranchCreateTrigger0DFB7CE7": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "AWS CodeCommit reference created event.",
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
            ],
            "referenceName": Array [
              Object {
                "prefix": "",
              },
            ],
            "referenceType": Array [
              "branch",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch322D891A",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FeatureBranchesCodeRepositoryBranchCreateTriggerAllowEventRuleFeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch6324E6DC16417AC9": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch322D891A",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodeRepositoryBranchCreateTrigger0DFB7CE7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "FeatureBranchesCodeRepositoryBranchDestroyTrigger71719207": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "AWS CodeCommit reference deleted event.",
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceDeleted",
            ],
            "referenceName": Array [
              Object {
                "prefix": "",
              },
            ],
            "referenceType": Array [
              "branch",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch73D260A3",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FeatureBranchesCodeRepositoryBranchDestroyTriggerAllowEventRuleFeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch9976B4E11308B9EB": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch73D260A3",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesCodeRepositoryBranchDestroyTrigger71719207",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "FeatureBranchesCodeRepositoryD5ABDB8F": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "RepositoryName": "FeatureBranches",
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "FeatureBranchesCodeRepositoryFeatureBranchesCodePipelineE4C72340mainlineEventRule3D893216": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "mainline",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":",
                  Object {
                    "Ref": "FeatureBranchesCodePipelineEC802A1B",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodePipelineEventsRole25B14D6E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Build project to deploy feature branch pipelines",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRole4447D4AD",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "version: \\"0.2\\"
phases:
  install:
    commands:
      - npm install -g aws-cdk
      - yarn install --frozen-lockfile || npx projen && yarn install --frozen-lockfile
  build:
    commands:
      - npx nx run-many --target=build --all
      - \\"cd \\"
      - npx cdk synth
      - npx cdk deploy --require-approval=never
artifacts:
  files:
    - \\"**/*\\"
",
          "Location": Object {
            "Fn::GetAtt": Array [
              "FeatureBranchesCodeRepositoryD5ABDB8F",
              "CloneUrlHttp",
            ],
          },
          "Type": "CODECOMMIT",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRole4447D4AD": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRoleDefaultPolicyAD0C661D": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "applies_to": Array [
                "Action::codecommit:Get*",
                "Action::codecommit:List*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires get, list, and pull access to the CodeCommit repository.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:codebuild:<AWS::Region>:<AWS::AccountId>:report-group/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>-\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to create report groups that are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:logs:<AWS::Region>:<AWS::AccountId>:log-group:/aws/codebuild/<[a-zA-Z0-9]*CreateFeatureBranchProject.*>:\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to manage logs and streams whose names are dynamically determined.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:\\\\*:iam::<AWS::AccountId>:role/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "CodeBuild requires access to assume a role from within the current account limited by a condition in order to deploy.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codecommit:GitPull",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesCodeRepositoryD5ABDB8F",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRoleDefaultPolicyAD0C661D",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProjectRole4447D4AD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranch322D891A": Object {
      "DependsOn": Array [
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRoleDefaultPolicy2CC3795A",
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "3dffd1223abe6a9d3f28ac0373433ddb0be9a7d7a446b101dfa131cce1904ca6.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "CODEBUILD_PROJECT": Object {
              "Ref": "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
            },
            "MAIN_BRANCH": "mainline",
          },
        },
        "Handler": "create_branch.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRoleDefaultPolicy2CC3795A": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FeatureBranchesFeatureBranchPipelinesCreateFeatureBranchProject3679E880",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRoleDefaultPolicy2CC3795A",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerCreateBranchServiceRole6C035B41",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranch73D260A3": Object {
      "DependsOn": Array [
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRoleDefaultPolicy273B724B",
        "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B",
      ],
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "f590c9801399fa0d9348b320971d85367d58bf736ce2a832b8eddce2a34501a5.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "MAIN_BRANCH": "mainline",
            "REPO_NAME": Object {
              "Fn::GetAtt": Array [
                "FeatureBranchesCodeRepositoryD5ABDB8F",
                "Name",
              ],
            },
          },
        },
        "Handler": "destroy_branch.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
      },
      "Type": "AWS::Lambda::Function",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRoleDefaultPolicy273B724B": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsSolutions-IAM5",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Resource::arn:<AWS::Partition>:cloudformation:<AWS::Region>:<AWS::AccountId>:stack/\\\\*/\\\\*$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to delete any stacks with specific tags.",
            },
            Object {
              "applies_to": Array [
                "Resource::*",
              ],
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "The DestroyBranch Lambda requires access to look up CloudFormation stacks by tag. The Resource Group Tagging API must use 'Resource': '*'.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsSolutions-IAM4",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "applies_to": Array [
                Object {
                  "regex": "/^Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole$/g",
                },
              ],
              "id": "AwsPrototyping-IAMNoManagedPolicies",
              "reason": "Lambda functions use the default AWS LambdaBasicExecutionRole managed role.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudformation:DeleteStack",
              "Condition": Object {
                "ForAllValues:StringEquals": Object {
                  "aws:TagKeys": Array [
                    "FeatureBranch",
                    "RepoName",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":cloudformation:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stack/*/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "tag:GetResources",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRoleDefaultPolicy273B724B",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesFeatureBranchPipelinesLambdaTriggerDestroyBranchServiceRole81FC6B0B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FeatureBranchesUpdatePipelineSelfMutation0C4FE793": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step Default/CodePipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:6.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "FeatureBranchesUpdatePipelineSelfMutationRole9669379F",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk -a . deploy Default --require-approval=never --verbose\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "FeatureBranchesUpdatePipelineSelfMutationRole9669379F": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "FeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicy2C1692D4": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsPrototyping-IAMNoWildcardPermissions",
              "reason": "Wildcards are needed for dynamically created resources.",
            },
            Object {
              "id": "AwsSolutions-CB4",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsPrototyping-CodeBuildProjectKMSEncryptedArtifacts",
              "reason": "Encryption of Codebuild is not required.",
            },
            Object {
              "id": "AwsSolutions-S1",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
            Object {
              "id": "AwsPrototyping-S3BucketLoggingEnabled",
              "reason": "Access Log buckets should not have s3 bucket logging",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "FeatureBranchesUpdatePipelineSelfMutation0C4FE793",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "FeatureBranchesArtifactsBucketAE5F1C21",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "FeatureBranchesArtifactsBucketAE5F1C21",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FeatureBranchesUpdatePipelineSelfMutationRoleDefaultPolicy2C1692D4",
        "Roles": Array [
          Object {
            "Ref": "FeatureBranchesUpdatePipelineSelfMutationRole9669379F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
