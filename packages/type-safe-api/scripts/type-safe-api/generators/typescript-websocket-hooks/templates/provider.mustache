import {
  {{#apiInfo}}{{#apis.0}}{{classname}}{{/apis.0}}{{/apiInfo}}WebSocketClient,
} from "{{#apiInfo}}{{#apis.0}}{{vendorExtensions.x-websocket-client-package-name}}{{/apis.0}}{{/apiInfo}}";
import React, { createContext, ReactNode, FC } from "react";

export const {{#apiInfo}}{{#apis.0}}{{classname}}{{/apis.0}}{{/apiInfo}}WebSocketClientContext = createContext<{{#apiInfo}}{{#apis.0}}{{classname}}{{/apis.0}}{{/apiInfo}}WebSocketClient | undefined>(undefined);

export interface {{#apiInfo}}{{#apis.0}}{{classname}}{{/apis.0}}{{/apiInfo}}WebSocketClientProviderProps {
  readonly client: {{#apiInfo}}{{#apis.0}}{{classname}}{{/apis.0}}{{/apiInfo}}WebSocketClient;
  readonly children?: ReactNode;
}

export const {{#apiInfo}}{{#apis.0}}{{classname}}{{/apis.0}}{{/apiInfo}}WebSocketClientProvider: FC<{{#apiInfo}}{{#apis.0}}{{classname}}{{/apis.0}}{{/apiInfo}}WebSocketClientProviderProps> = (props) => {
  return (
    <{{#apiInfo}}{{#apis.0}}{{classname}}{{/apis.0}}{{/apiInfo}}WebSocketClientContext.Provider value={props.client}>
      {props.children}
    </{{#apiInfo}}{{#apis.0}}{{classname}}{{/apis.0}}{{/apiInfo}}WebSocketClientContext.Provider>
  );
};
