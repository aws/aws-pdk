// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Typescript Handlers Code Generation Script Unit Tests Generates With handlers.yaml 1`] = `
"import {
  typescriptOneHandler,
  TypescriptOneChainedHandlerFunction,
  INTERCEPTORS,
  Response,
  LoggingInterceptor,
} from "test-client";

/**
 * Type-safe handler for the TypescriptOne operation
 */
export const typescriptOne: TypescriptOneChainedHandlerFunction = async (request) => {
  LoggingInterceptor.getLogger(request).info("Start TypescriptOne Operation");

  // TODO: Implement TypescriptOne Operation. \`input\` contains the request input.
  const { input } = request;

  return Response.internalFailure({
    message: "Not Implemented!",
  });
};

/**
 * Entry point for the AWS Lambda handler for the TypescriptOne operation.
 * The typescriptOneHandler method wraps the type-safe handler and manages marshalling inputs and outputs
 */
export const handler = typescriptOneHandler(...INTERCEPTORS, typescriptOne);

"
`;

exports[`Typescript Handlers Code Generation Script Unit Tests Generates With handlers.yaml 2`] = `
"import {
  typescriptTwoHandler,
  TypescriptTwoChainedHandlerFunction,
  INTERCEPTORS,
  Response,
  LoggingInterceptor,
} from "test-client";

/**
 * Type-safe handler for the TypescriptTwo operation
 */
export const typescriptTwo: TypescriptTwoChainedHandlerFunction = async (request) => {
  LoggingInterceptor.getLogger(request).info("Start TypescriptTwo Operation");

  // TODO: Implement TypescriptTwo Operation. \`input\` contains the request input.
  const { input } = request;

  return Response.internalFailure({
    message: "Not Implemented!",
  });
};

/**
 * Entry point for the AWS Lambda handler for the TypescriptTwo operation.
 * The typescriptTwoHandler method wraps the type-safe handler and manages marshalling inputs and outputs
 */
export const handler = typescriptTwoHandler(...INTERCEPTORS, typescriptTwo);"
`;
